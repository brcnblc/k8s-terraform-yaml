{
  "format_version": "0.1",
  "provider_schemas": {
    "kubernetes": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "client_certificate": {
              "type": "string",
              "description": "PEM-encoded client certificate for TLS authentication.",
              "optional": true
            },
            "client_key": {
              "type": "string",
              "description": "PEM-encoded client certificate key for TLS authentication.",
              "optional": true
            },
            "cluster_ca_certificate": {
              "type": "string",
              "description": "PEM-encoded root certificates bundle for TLS authentication.",
              "optional": true
            },
            "config_context": {
              "type": "string",
              "optional": true
            },
            "config_context_auth_info": {
              "type": "string",
              "optional": true
            },
            "config_context_cluster": {
              "type": "string",
              "optional": true
            },
            "config_path": {
              "type": "string",
              "description": "Path to the kube config file, defaults to ~/.kube/config",
              "optional": true
            },
            "host": {
              "type": "string",
              "description": "The hostname (in form of URI) of Kubernetes master.",
              "optional": true
            },
            "insecure": {
              "type": "bool",
              "description": "Whether server should be accessed without verifying the TLS certificate.",
              "optional": true
            },
            "load_config_file": {
              "type": "bool",
              "description": "Load local kubeconfig.",
              "optional": true
            },
            "password": {
              "type": "string",
              "description": "The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
              "optional": true
            },
            "token": {
              "type": "string",
              "description": "Token to authenticate an service account",
              "optional": true
            },
            "username": {
              "type": "string",
              "description": "The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
              "optional": true
            }
          },
          "block_types": {
            "exec": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "api_version": {
                    "type": "string",
                    "required": true
                  },
                  "args": {
                    "type": [
                      "list",
                      "string"
                    ],
                    "optional": true
                  },
                  "command": {
                    "type": "string",
                    "required": true
                  },
                  "env": {
                    "type": [
                      "map",
                      "string"
                    ],
                    "optional": true
                  }
                }
              },
              "max_items": 1
            }
          }
        }
      },
      "resource_schemas": {
        "kubernetes_api_service": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the api_service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the api_service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the api_service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this api_service that can be used by clients to determine when api_service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this api_service.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this api_service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ca_bundle": {
                      "type": "string",
                      "description": "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.",
                      "optional": true
                    },
                    "group": {
                      "type": "string",
                      "description": "Group is the API group name this server hosts.",
                      "required": true
                    },
                    "group_priority_minimum": {
                      "type": "number",
                      "description": "GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object. (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s.",
                      "required": true
                    },
                    "insecure_skip_tls_verify": {
                      "type": "bool",
                      "description": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged. You should use the CABundle instead.",
                      "optional": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version is the API version this server hosts. For example, `v1`.",
                      "required": true
                    },
                    "version_priority": {
                      "type": "number",
                      "description": "VersionPriority controls the ordering of this API version inside of its group. Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is `kube-like`, it will sort above non `kube-like` version strings, which are ordered lexicographically. `Kube-like` versions start with a `v`, then are followed by a number (the major version), then optionally the string `alpha` or `beta` and another number (the minor version). These are sorted first by GA > `beta` > `alpha` (where GA is a version with no suffix such as `beta` or `alpha`), and then by comparing major version, then minor version. An example sorted list of versions: `v10`, `v2`, `v1`, `v11beta2`, `v10beta3`, `v3beta1`, `v12alpha1`, `v11alpha2`, `foo1`, `foo10`.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "service": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name is the name of the service.",
                            "required": true
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Namespace is the namespace of the service.",
                            "required": true
                          },
                          "port": {
                            "type": "number",
                            "description": "If specified, the port on the service that is hosting the service. Defaults to 443 for backward compatibility. Should be a valid port number (1-65535, inclusive).",
                            "optional": true
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_cluster_role": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the clusterRole that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the clusterRole. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the clusterRole, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this clusterRole that can be used by clients to determine when clusterRole has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this clusterRole.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this clusterRole. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_groups": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "APIGroups is the name of the APIGroup that contains the resources. If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
                      "optional": true
                    },
                    "non_resource_urls": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "NonResourceURLs is a set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"), but not both.",
                      "optional": true
                    },
                    "resource_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "ResourceNames is an optional white list of names that the rule applies to. An empty set means that everything is allowed.",
                      "optional": true
                    },
                    "resources": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Resources is a list of resources this rule applies to. ResourceAll represents all resources.",
                      "optional": true
                    },
                    "verbs": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule. VerbAll represents all kinds.",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "kubernetes_cluster_role_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the clusterRoleBinding that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the clusterRoleBinding. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the clusterRoleBinding, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this clusterRoleBinding that can be used by clients to determine when clusterRoleBinding has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this clusterRoleBinding.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this clusterRoleBinding. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "role_ref": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_group": {
                      "type": "string",
                      "description": "The API group of the user. The only value possible at the moment is `rbac.authorization.k8s.io`.",
                      "required": true
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of resource.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the User to bind to.",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "subject": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_group": {
                      "type": "string",
                      "description": "The API group of the subject resource.",
                      "optional": true,
                      "computed": true
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of resource.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource to bind to.",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The Namespace of the subject resource.",
                      "optional": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "kubernetes_config_map": {
          "version": 0,
          "block": {
            "attributes": {
              "binary_data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet. This field only accepts base64-encoded payloads that will be decoded/encoded before being sent/received to/from the apiserver.",
                "optional": true
              },
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the config map that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the config map. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the config map, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the config map must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this config map that can be used by clients to determine when config map has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this config map.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this config map. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_cron_job": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the cronjob that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the cronjob. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the cronjob, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the cronjob must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this cronjob that can be used by clients to determine when cronjob has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this cronjob.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this cronjob. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "concurrency_policy": {
                      "type": "string",
                      "description": "Specifies how to treat concurrent executions of a Job. Defaults to Allow.",
                      "optional": true
                    },
                    "failed_jobs_history_limit": {
                      "type": "number",
                      "description": "The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
                      "optional": true
                    },
                    "schedule": {
                      "type": "string",
                      "description": "Cron format string, e.g. 0 * * * * or @hourly, as schedule time of its jobs to be created and executed.",
                      "required": true
                    },
                    "starting_deadline_seconds": {
                      "type": "number",
                      "description": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason. Missed jobs executions will be counted as failed ones.",
                      "optional": true
                    },
                    "successful_jobs_history_limit": {
                      "type": "number",
                      "description": "The number of successful finished jobs to retain. Defaults to 3.",
                      "optional": true
                    },
                    "suspend": {
                      "type": "bool",
                      "description": "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions. Defaults to false.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "job_template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the jobTemplateSpec that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the jobTemplateSpec. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the jobTemplateSpec, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this jobTemplateSpec that can be used by clients to determine when jobTemplateSpec has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this jobTemplateSpec.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this jobTemplateSpec. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "active_deadline_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                  "optional": true
                                },
                                "backoff_limit": {
                                  "type": "number",
                                  "description": "Specifies the number of retries before marking this job failed. Defaults to 6",
                                  "optional": true
                                },
                                "completions": {
                                  "type": "number",
                                  "description": "Specifies the desired number of successfully finished pods the job should be run with. Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value. Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                  "optional": true
                                },
                                "manual_selector": {
                                  "type": "bool",
                                  "description": "Controls generation of pod labels and pod selectors. Leave unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template. When true, the user is responsyble for picking unique labels and specifying the selector. Failure to pick a unique label may cause this and other jobs to not function correctly. More info: https://git.k8s.io/community/contributors/design-proposals/selector-generation.md",
                                  "optional": true
                                },
                                "parallelism": {
                                  "type": "number",
                                  "description": "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                  "optional": true
                                },
                                "ttl_seconds_after_finished": {
                                  "type": "number",
                                  "description": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "selector": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "match_labels": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "optional": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                              "optional": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "template": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "metadata": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "annotations": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "An unstructured key value map stored with the job that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                              "optional": true
                                            },
                                            "generate_name": {
                                              "type": "string",
                                              "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                              "optional": true
                                            },
                                            "generation": {
                                              "type": "number",
                                              "description": "A sequence number representing a specific generation of the desired state.",
                                              "computed": true
                                            },
                                            "labels": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the job. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the job, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "resource_version": {
                                              "type": "string",
                                              "description": "An opaque value that represents the internal version of this job that can be used by clients to determine when job has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                              "computed": true
                                            },
                                            "self_link": {
                                              "type": "string",
                                              "description": "A URL representing this job.",
                                              "computed": true
                                            },
                                            "uid": {
                                              "type": "string",
                                              "description": "The unique in time and space value for this job. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                              "computed": true
                                            }
                                          }
                                        },
                                        "min_items": 1,
                                        "max_items": 1
                                      },
                                      "spec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "active_deadline_seconds": {
                                              "type": "number",
                                              "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                              "optional": true
                                            },
                                            "automount_service_account_token": {
                                              "type": "bool",
                                              "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                              "optional": true
                                            },
                                            "dns_policy": {
                                              "type": "string",
                                              "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                                              "optional": true
                                            },
                                            "host_ipc": {
                                              "type": "bool",
                                              "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                                              "optional": true
                                            },
                                            "host_network": {
                                              "type": "bool",
                                              "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                                              "optional": true
                                            },
                                            "host_pid": {
                                              "type": "bool",
                                              "description": "Use the host's pid namespace.",
                                              "optional": true
                                            },
                                            "hostname": {
                                              "type": "string",
                                              "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "node_name": {
                                              "type": "string",
                                              "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "node_selector": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                                              "optional": true
                                            },
                                            "priority_class_name": {
                                              "type": "string",
                                              "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                              "optional": true
                                            },
                                            "restart_policy": {
                                              "type": "string",
                                              "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                                              "optional": true
                                            },
                                            "service_account_name": {
                                              "type": "string",
                                              "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "share_process_namespace": {
                                              "type": "bool",
                                              "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                                              "optional": true
                                            },
                                            "subdomain": {
                                              "type": "string",
                                              "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                                              "optional": true
                                            },
                                            "termination_grace_period_seconds": {
                                              "type": "number",
                                              "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "affinity": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "node_affinity": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "preferred_during_scheduling_ignored_during_execution": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "weight": {
                                                                "type": "number",
                                                                "description": "weight is in the range 1-100",
                                                                "required": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "preference": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "block_types": {
                                                                    "match_expressions": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "key": {
                                                                            "type": "string",
                                                                            "description": "The label key that the selector applies to.",
                                                                            "optional": true
                                                                          },
                                                                          "operator": {
                                                                            "type": "string",
                                                                            "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "optional": true
                                                                          },
                                                                          "values": {
                                                                            "type": [
                                                                              "set",
                                                                              "string"
                                                                            ],
                                                                            "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "min_items": 1,
                                                                "max_items": 1
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "required_during_scheduling_ignored_during_execution": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "node_selector_term": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "block_types": {
                                                                    "match_expressions": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "key": {
                                                                            "type": "string",
                                                                            "description": "The label key that the selector applies to.",
                                                                            "optional": true
                                                                          },
                                                                          "operator": {
                                                                            "type": "string",
                                                                            "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "optional": true
                                                                          },
                                                                          "values": {
                                                                            "type": [
                                                                              "set",
                                                                              "string"
                                                                            ],
                                                                            "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "pod_affinity": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "preferred_during_scheduling_ignored_during_execution": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "weight": {
                                                                "type": "number",
                                                                "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                                "required": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "pod_affinity_term": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "namespaces": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                                      "optional": true
                                                                    },
                                                                    "topology_key": {
                                                                      "type": "string",
                                                                      "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "label_selector": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "match_labels": {
                                                                            "type": [
                                                                              "map",
                                                                              "string"
                                                                            ],
                                                                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                            "optional": true
                                                                          }
                                                                        },
                                                                        "block_types": {
                                                                          "match_expressions": {
                                                                            "nesting_mode": "list",
                                                                            "block": {
                                                                              "attributes": {
                                                                                "key": {
                                                                                  "type": "string",
                                                                                  "description": "The label key that the selector applies to.",
                                                                                  "optional": true
                                                                                },
                                                                                "operator": {
                                                                                  "type": "string",
                                                                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                                  "optional": true
                                                                                },
                                                                                "values": {
                                                                                  "type": [
                                                                                    "set",
                                                                                    "string"
                                                                                  ],
                                                                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                  "optional": true
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "min_items": 1,
                                                                "max_items": 1
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "required_during_scheduling_ignored_during_execution": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "namespaces": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                                "optional": true
                                                              },
                                                              "topology_key": {
                                                                "type": "string",
                                                                "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "label_selector": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "match_labels": {
                                                                      "type": [
                                                                        "map",
                                                                        "string"
                                                                      ],
                                                                      "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "match_expressions": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "key": {
                                                                            "type": "string",
                                                                            "description": "The label key that the selector applies to.",
                                                                            "optional": true
                                                                          },
                                                                          "operator": {
                                                                            "type": "string",
                                                                            "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                            "optional": true
                                                                          },
                                                                          "values": {
                                                                            "type": [
                                                                              "set",
                                                                              "string"
                                                                            ],
                                                                            "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "pod_anti_affinity": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "preferred_during_scheduling_ignored_during_execution": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "weight": {
                                                                "type": "number",
                                                                "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                                "required": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "pod_affinity_term": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "namespaces": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                                      "optional": true
                                                                    },
                                                                    "topology_key": {
                                                                      "type": "string",
                                                                      "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "label_selector": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "match_labels": {
                                                                            "type": [
                                                                              "map",
                                                                              "string"
                                                                            ],
                                                                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                            "optional": true
                                                                          }
                                                                        },
                                                                        "block_types": {
                                                                          "match_expressions": {
                                                                            "nesting_mode": "list",
                                                                            "block": {
                                                                              "attributes": {
                                                                                "key": {
                                                                                  "type": "string",
                                                                                  "description": "The label key that the selector applies to.",
                                                                                  "optional": true
                                                                                },
                                                                                "operator": {
                                                                                  "type": "string",
                                                                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                                  "optional": true
                                                                                },
                                                                                "values": {
                                                                                  "type": [
                                                                                    "set",
                                                                                    "string"
                                                                                  ],
                                                                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                  "optional": true
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "min_items": 1,
                                                                "max_items": 1
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "required_during_scheduling_ignored_during_execution": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "namespaces": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                                "optional": true
                                                              },
                                                              "topology_key": {
                                                                "type": "string",
                                                                "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "label_selector": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "match_labels": {
                                                                      "type": [
                                                                        "map",
                                                                        "string"
                                                                      ],
                                                                      "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "match_expressions": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "key": {
                                                                            "type": "string",
                                                                            "description": "The label key that the selector applies to.",
                                                                            "optional": true
                                                                          },
                                                                          "operator": {
                                                                            "type": "string",
                                                                            "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                            "optional": true
                                                                          },
                                                                          "values": {
                                                                            "type": [
                                                                              "set",
                                                                              "string"
                                                                            ],
                                                                            "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "container": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "args": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                                    "optional": true
                                                  },
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                                    "optional": true
                                                  },
                                                  "image": {
                                                    "type": "string",
                                                    "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                                    "optional": true
                                                  },
                                                  "image_pull_policy": {
                                                    "type": "string",
                                                    "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                                    "required": true
                                                  },
                                                  "stdin": {
                                                    "type": "bool",
                                                    "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                                    "optional": true
                                                  },
                                                  "stdin_once": {
                                                    "type": "bool",
                                                    "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                                    "optional": true
                                                  },
                                                  "termination_message_path": {
                                                    "type": "string",
                                                    "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                                    "optional": true
                                                  },
                                                  "tty": {
                                                    "type": "bool",
                                                    "description": "Whether this container should allocate a TTY for itself",
                                                    "optional": true
                                                  },
                                                  "working_dir": {
                                                    "type": "string",
                                                    "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "env": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                                          "required": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "value_from": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "config_map_key_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The key to select.",
                                                                      "optional": true
                                                                    },
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "field_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "api_version": {
                                                                      "type": "string",
                                                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                      "optional": true
                                                                    },
                                                                    "field_path": {
                                                                      "type": "string",
                                                                      "description": "Path of the field to select in the specified API version",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "resource_field_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "container_name": {
                                                                      "type": "string",
                                                                      "optional": true
                                                                    },
                                                                    "resource": {
                                                                      "type": "string",
                                                                      "description": "Resource to select",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "secret_key_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The key of the secret to select from. Must be a valid secret key.",
                                                                      "optional": true
                                                                    },
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "env_from": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "prefix": {
                                                          "type": "string",
                                                          "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "config_map_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                "required": true
                                                              },
                                                              "optional": {
                                                                "type": "bool",
                                                                "description": "Specify whether the ConfigMap must be defined",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "secret_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                "required": true
                                                              },
                                                              "optional": {
                                                                "type": "bool",
                                                                "description": "Specify whether the Secret must be defined",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "lifecycle": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "post_start": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "exec": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "command": {
                                                                      "type": [
                                                                        "list",
                                                                        "string"
                                                                      ],
                                                                      "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "http_get": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "host": {
                                                                      "type": "string",
                                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                      "optional": true
                                                                    },
                                                                    "path": {
                                                                      "type": "string",
                                                                      "description": "Path to access on the HTTP server.",
                                                                      "optional": true
                                                                    },
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "optional": true
                                                                    },
                                                                    "scheme": {
                                                                      "type": "string",
                                                                      "description": "Scheme to use for connecting to the host.",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "http_header": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "name": {
                                                                            "type": "string",
                                                                            "description": "The header field name",
                                                                            "optional": true
                                                                          },
                                                                          "value": {
                                                                            "type": "string",
                                                                            "description": "The header field value",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "tcp_socket": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "pre_stop": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "exec": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "command": {
                                                                      "type": [
                                                                        "list",
                                                                        "string"
                                                                      ],
                                                                      "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "http_get": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "host": {
                                                                      "type": "string",
                                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                      "optional": true
                                                                    },
                                                                    "path": {
                                                                      "type": "string",
                                                                      "description": "Path to access on the HTTP server.",
                                                                      "optional": true
                                                                    },
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "optional": true
                                                                    },
                                                                    "scheme": {
                                                                      "type": "string",
                                                                      "description": "Scheme to use for connecting to the host.",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "http_header": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "name": {
                                                                            "type": "string",
                                                                            "description": "The header field name",
                                                                            "optional": true
                                                                          },
                                                                          "value": {
                                                                            "type": "string",
                                                                            "description": "The header field value",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "tcp_socket": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "liveness_probe": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "failure_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                                          "optional": true
                                                        },
                                                        "initial_delay_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        },
                                                        "period_seconds": {
                                                          "type": "number",
                                                          "description": "How often (in seconds) to perform the probe",
                                                          "optional": true
                                                        },
                                                        "success_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                                          "optional": true
                                                        },
                                                        "timeout_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "exec": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "command": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "http_get": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "host": {
                                                                "type": "string",
                                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path to access on the HTTP server.",
                                                                "optional": true
                                                              },
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "optional": true
                                                              },
                                                              "scheme": {
                                                                "type": "string",
                                                                "description": "Scheme to use for connecting to the host.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "http_header": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "The header field name",
                                                                      "optional": true
                                                                    },
                                                                    "value": {
                                                                      "type": "string",
                                                                      "description": "The header field value",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "tcp_socket": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "required": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "port": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_port": {
                                                          "type": "number",
                                                          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                                          "required": true
                                                        },
                                                        "host_ip": {
                                                          "type": "string",
                                                          "description": "What host IP to bind the external port to.",
                                                          "optional": true
                                                        },
                                                        "host_port": {
                                                          "type": "number",
                                                          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                                          "optional": true
                                                        },
                                                        "protocol": {
                                                          "type": "string",
                                                          "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "readiness_probe": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "failure_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                                          "optional": true
                                                        },
                                                        "initial_delay_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        },
                                                        "period_seconds": {
                                                          "type": "number",
                                                          "description": "How often (in seconds) to perform the probe",
                                                          "optional": true
                                                        },
                                                        "success_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                                          "optional": true
                                                        },
                                                        "timeout_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "exec": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "command": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "http_get": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "host": {
                                                                "type": "string",
                                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path to access on the HTTP server.",
                                                                "optional": true
                                                              },
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "optional": true
                                                              },
                                                              "scheme": {
                                                                "type": "string",
                                                                "description": "Scheme to use for connecting to the host.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "http_header": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "The header field name",
                                                                      "optional": true
                                                                    },
                                                                    "value": {
                                                                      "type": "string",
                                                                      "description": "The header field value",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "tcp_socket": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "required": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resources": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "limits": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "cpu": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "memory": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "requests": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "cpu": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "memory": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "security_context": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "allow_privilege_escalation": {
                                                          "type": "bool",
                                                          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                                          "optional": true
                                                        },
                                                        "privileged": {
                                                          "type": "bool",
                                                          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                                          "optional": true
                                                        },
                                                        "read_only_root_filesystem": {
                                                          "type": "bool",
                                                          "description": "Whether this container has a read-only root filesystem. Default is false.",
                                                          "optional": true
                                                        },
                                                        "run_as_group": {
                                                          "type": "number",
                                                          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                          "optional": true
                                                        },
                                                        "run_as_non_root": {
                                                          "type": "bool",
                                                          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                          "optional": true
                                                        },
                                                        "run_as_user": {
                                                          "type": "number",
                                                          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "capabilities": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "add": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Added capabilities",
                                                                "optional": true
                                                              },
                                                              "drop": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Removed capabilities",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "se_linux_options": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "level": {
                                                                "type": "string",
                                                                "description": "Level is SELinux level label that applies to the container.",
                                                                "optional": true
                                                              },
                                                              "role": {
                                                                "type": "string",
                                                                "description": "Role is a SELinux role label that applies to the container.",
                                                                "optional": true
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "description": "Type is a SELinux type label that applies to the container.",
                                                                "optional": true
                                                              },
                                                              "user": {
                                                                "type": "string",
                                                                "description": "User is a SELinux user label that applies to the container.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "startup_probe": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "failure_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                                          "optional": true
                                                        },
                                                        "initial_delay_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        },
                                                        "period_seconds": {
                                                          "type": "number",
                                                          "description": "How often (in seconds) to perform the probe",
                                                          "optional": true
                                                        },
                                                        "success_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                                          "optional": true
                                                        },
                                                        "timeout_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "exec": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "command": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "http_get": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "host": {
                                                                "type": "string",
                                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path to access on the HTTP server.",
                                                                "optional": true
                                                              },
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "optional": true
                                                              },
                                                              "scheme": {
                                                                "type": "string",
                                                                "description": "Scheme to use for connecting to the host.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "http_header": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "The header field name",
                                                                      "optional": true
                                                                    },
                                                                    "value": {
                                                                      "type": "string",
                                                                      "description": "The header field value",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "tcp_socket": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "required": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "volume_mount": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "mount_path": {
                                                          "type": "string",
                                                          "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                                          "required": true
                                                        },
                                                        "mount_propagation": {
                                                          "type": "string",
                                                          "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "This must match the Name of a Volume.",
                                                          "required": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                                          "optional": true
                                                        },
                                                        "sub_path": {
                                                          "type": "string",
                                                          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "dns_config": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "nameservers": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                                    "optional": true
                                                  },
                                                  "searches": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "option": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the option.",
                                                          "required": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "Value of the option. Optional: Defaults to empty.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "host_aliases": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "hostnames": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Hostnames for the IP address.",
                                                    "required": true
                                                  },
                                                  "ip": {
                                                    "type": "string",
                                                    "description": "IP address of the host file entry.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            },
                                            "image_pull_secrets": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            },
                                            "init_container": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "args": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                                    "optional": true
                                                  },
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                                    "optional": true
                                                  },
                                                  "image": {
                                                    "type": "string",
                                                    "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                                    "optional": true
                                                  },
                                                  "image_pull_policy": {
                                                    "type": "string",
                                                    "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                                    "required": true
                                                  },
                                                  "stdin": {
                                                    "type": "bool",
                                                    "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                                    "optional": true
                                                  },
                                                  "stdin_once": {
                                                    "type": "bool",
                                                    "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                                    "optional": true
                                                  },
                                                  "termination_message_path": {
                                                    "type": "string",
                                                    "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                                    "optional": true
                                                  },
                                                  "tty": {
                                                    "type": "bool",
                                                    "description": "Whether this container should allocate a TTY for itself",
                                                    "optional": true
                                                  },
                                                  "working_dir": {
                                                    "type": "string",
                                                    "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "env": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                                          "required": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "value_from": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "config_map_key_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The key to select.",
                                                                      "optional": true
                                                                    },
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "field_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "api_version": {
                                                                      "type": "string",
                                                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                      "optional": true
                                                                    },
                                                                    "field_path": {
                                                                      "type": "string",
                                                                      "description": "Path of the field to select in the specified API version",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "resource_field_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "container_name": {
                                                                      "type": "string",
                                                                      "optional": true
                                                                    },
                                                                    "resource": {
                                                                      "type": "string",
                                                                      "description": "Resource to select",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "secret_key_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The key of the secret to select from. Must be a valid secret key.",
                                                                      "optional": true
                                                                    },
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "env_from": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "prefix": {
                                                          "type": "string",
                                                          "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "config_map_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                "required": true
                                                              },
                                                              "optional": {
                                                                "type": "bool",
                                                                "description": "Specify whether the ConfigMap must be defined",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "secret_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                "required": true
                                                              },
                                                              "optional": {
                                                                "type": "bool",
                                                                "description": "Specify whether the Secret must be defined",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "lifecycle": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "post_start": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "exec": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "command": {
                                                                      "type": [
                                                                        "list",
                                                                        "string"
                                                                      ],
                                                                      "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "http_get": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "host": {
                                                                      "type": "string",
                                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                      "optional": true
                                                                    },
                                                                    "path": {
                                                                      "type": "string",
                                                                      "description": "Path to access on the HTTP server.",
                                                                      "optional": true
                                                                    },
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "optional": true
                                                                    },
                                                                    "scheme": {
                                                                      "type": "string",
                                                                      "description": "Scheme to use for connecting to the host.",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "http_header": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "name": {
                                                                            "type": "string",
                                                                            "description": "The header field name",
                                                                            "optional": true
                                                                          },
                                                                          "value": {
                                                                            "type": "string",
                                                                            "description": "The header field value",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "tcp_socket": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "pre_stop": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "block_types": {
                                                              "exec": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "command": {
                                                                      "type": [
                                                                        "list",
                                                                        "string"
                                                                      ],
                                                                      "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "http_get": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "host": {
                                                                      "type": "string",
                                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                      "optional": true
                                                                    },
                                                                    "path": {
                                                                      "type": "string",
                                                                      "description": "Path to access on the HTTP server.",
                                                                      "optional": true
                                                                    },
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "optional": true
                                                                    },
                                                                    "scheme": {
                                                                      "type": "string",
                                                                      "description": "Scheme to use for connecting to the host.",
                                                                      "optional": true
                                                                    }
                                                                  },
                                                                  "block_types": {
                                                                    "http_header": {
                                                                      "nesting_mode": "list",
                                                                      "block": {
                                                                        "attributes": {
                                                                          "name": {
                                                                            "type": "string",
                                                                            "description": "The header field name",
                                                                            "optional": true
                                                                          },
                                                                          "value": {
                                                                            "type": "string",
                                                                            "description": "The header field value",
                                                                            "optional": true
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              },
                                                              "tcp_socket": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "port": {
                                                                      "type": "string",
                                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "liveness_probe": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "failure_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                                          "optional": true
                                                        },
                                                        "initial_delay_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        },
                                                        "period_seconds": {
                                                          "type": "number",
                                                          "description": "How often (in seconds) to perform the probe",
                                                          "optional": true
                                                        },
                                                        "success_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                                          "optional": true
                                                        },
                                                        "timeout_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "exec": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "command": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "http_get": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "host": {
                                                                "type": "string",
                                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path to access on the HTTP server.",
                                                                "optional": true
                                                              },
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "optional": true
                                                              },
                                                              "scheme": {
                                                                "type": "string",
                                                                "description": "Scheme to use for connecting to the host.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "http_header": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "The header field name",
                                                                      "optional": true
                                                                    },
                                                                    "value": {
                                                                      "type": "string",
                                                                      "description": "The header field value",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "tcp_socket": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "required": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "port": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_port": {
                                                          "type": "number",
                                                          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                                          "required": true
                                                        },
                                                        "host_ip": {
                                                          "type": "string",
                                                          "description": "What host IP to bind the external port to.",
                                                          "optional": true
                                                        },
                                                        "host_port": {
                                                          "type": "number",
                                                          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                                          "optional": true
                                                        },
                                                        "protocol": {
                                                          "type": "string",
                                                          "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "readiness_probe": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "failure_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                                          "optional": true
                                                        },
                                                        "initial_delay_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        },
                                                        "period_seconds": {
                                                          "type": "number",
                                                          "description": "How often (in seconds) to perform the probe",
                                                          "optional": true
                                                        },
                                                        "success_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                                          "optional": true
                                                        },
                                                        "timeout_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "exec": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "command": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "http_get": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "host": {
                                                                "type": "string",
                                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path to access on the HTTP server.",
                                                                "optional": true
                                                              },
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "optional": true
                                                              },
                                                              "scheme": {
                                                                "type": "string",
                                                                "description": "Scheme to use for connecting to the host.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "http_header": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "The header field name",
                                                                      "optional": true
                                                                    },
                                                                    "value": {
                                                                      "type": "string",
                                                                      "description": "The header field value",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "tcp_socket": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "required": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resources": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "limits": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "cpu": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "memory": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "requests": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "cpu": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "memory": {
                                                                "type": "string",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "security_context": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "allow_privilege_escalation": {
                                                          "type": "bool",
                                                          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                                          "optional": true
                                                        },
                                                        "privileged": {
                                                          "type": "bool",
                                                          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                                          "optional": true
                                                        },
                                                        "read_only_root_filesystem": {
                                                          "type": "bool",
                                                          "description": "Whether this container has a read-only root filesystem. Default is false.",
                                                          "optional": true
                                                        },
                                                        "run_as_group": {
                                                          "type": "number",
                                                          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                          "optional": true
                                                        },
                                                        "run_as_non_root": {
                                                          "type": "bool",
                                                          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                          "optional": true
                                                        },
                                                        "run_as_user": {
                                                          "type": "number",
                                                          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "capabilities": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "add": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Added capabilities",
                                                                "optional": true
                                                              },
                                                              "drop": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Removed capabilities",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "se_linux_options": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "level": {
                                                                "type": "string",
                                                                "description": "Level is SELinux level label that applies to the container.",
                                                                "optional": true
                                                              },
                                                              "role": {
                                                                "type": "string",
                                                                "description": "Role is a SELinux role label that applies to the container.",
                                                                "optional": true
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "description": "Type is a SELinux type label that applies to the container.",
                                                                "optional": true
                                                              },
                                                              "user": {
                                                                "type": "string",
                                                                "description": "User is a SELinux user label that applies to the container.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "startup_probe": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "failure_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                                          "optional": true
                                                        },
                                                        "initial_delay_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        },
                                                        "period_seconds": {
                                                          "type": "number",
                                                          "description": "How often (in seconds) to perform the probe",
                                                          "optional": true
                                                        },
                                                        "success_threshold": {
                                                          "type": "number",
                                                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                                          "optional": true
                                                        },
                                                        "timeout_seconds": {
                                                          "type": "number",
                                                          "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "exec": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "command": {
                                                                "type": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "http_get": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "host": {
                                                                "type": "string",
                                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path to access on the HTTP server.",
                                                                "optional": true
                                                              },
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "optional": true
                                                              },
                                                              "scheme": {
                                                                "type": "string",
                                                                "description": "Scheme to use for connecting to the host.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "http_header": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "name": {
                                                                      "type": "string",
                                                                      "description": "The header field name",
                                                                      "optional": true
                                                                    },
                                                                    "value": {
                                                                      "type": "string",
                                                                      "description": "The header field value",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        },
                                                        "tcp_socket": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "port": {
                                                                "type": "string",
                                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                "required": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "volume_mount": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "mount_path": {
                                                          "type": "string",
                                                          "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                                          "required": true
                                                        },
                                                        "mount_propagation": {
                                                          "type": "string",
                                                          "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "This must match the Name of a Volume.",
                                                          "required": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                                          "optional": true
                                                        },
                                                        "sub_path": {
                                                          "type": "string",
                                                          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "security_context": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "fs_group": {
                                                    "type": "number",
                                                    "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                                    "optional": true
                                                  },
                                                  "run_as_group": {
                                                    "type": "number",
                                                    "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                                    "optional": true
                                                  },
                                                  "run_as_non_root": {
                                                    "type": "bool",
                                                    "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                    "optional": true
                                                  },
                                                  "run_as_user": {
                                                    "type": "number",
                                                    "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                                    "optional": true
                                                  },
                                                  "supplemental_groups": {
                                                    "type": [
                                                      "set",
                                                      "number"
                                                    ],
                                                    "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "se_linux_options": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "level": {
                                                          "type": "string",
                                                          "description": "Level is SELinux level label that applies to the container.",
                                                          "optional": true
                                                        },
                                                        "role": {
                                                          "type": "string",
                                                          "description": "Role is a SELinux role label that applies to the container.",
                                                          "optional": true
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "description": "Type is a SELinux type label that applies to the container.",
                                                          "optional": true
                                                        },
                                                        "user": {
                                                          "type": "string",
                                                          "description": "User is a SELinux user label that applies to the container.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "toleration": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "effect": {
                                                    "type": "string",
                                                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                    "optional": true
                                                  },
                                                  "key": {
                                                    "type": "string",
                                                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                    "optional": true
                                                  },
                                                  "toleration_seconds": {
                                                    "type": "string",
                                                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            },
                                            "volume": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "aws_elastic_block_store": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                                          "optional": true
                                                        },
                                                        "partition": {
                                                          "type": "number",
                                                          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                                          "optional": true
                                                        },
                                                        "volume_id": {
                                                          "type": "string",
                                                          "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "azure_disk": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "caching_mode": {
                                                          "type": "string",
                                                          "description": "Host Caching mode: None, Read Only, Read Write.",
                                                          "required": true
                                                        },
                                                        "data_disk_uri": {
                                                          "type": "string",
                                                          "description": "The URI the data disk in the blob storage",
                                                          "required": true
                                                        },
                                                        "disk_name": {
                                                          "type": "string",
                                                          "description": "The Name of the data disk in the blob storage",
                                                          "required": true
                                                        },
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "azure_file": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                                          "optional": true
                                                        },
                                                        "secret_name": {
                                                          "type": "string",
                                                          "description": "The name of secret that contains Azure Storage Account Name and Key",
                                                          "required": true
                                                        },
                                                        "share_name": {
                                                          "type": "string",
                                                          "description": "Share Name",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "ceph_fs": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "monitors": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                                          "required": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                                          "optional": true
                                                        },
                                                        "secret_file": {
                                                          "type": "string",
                                                          "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                                          "optional": true
                                                        },
                                                        "user": {
                                                          "type": "string",
                                                          "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "secret_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "cinder": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                                          "optional": true
                                                        },
                                                        "volume_id": {
                                                          "type": "string",
                                                          "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "config_map": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "default_mode": {
                                                          "type": "string",
                                                          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "items": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The key to project.",
                                                                "optional": true
                                                              },
                                                              "mode": {
                                                                "type": "string",
                                                                "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "downward_api": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "default_mode": {
                                                          "type": "string",
                                                          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "items": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "mode": {
                                                                "type": "string",
                                                                "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                                "required": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "field_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "api_version": {
                                                                      "type": "string",
                                                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                      "optional": true
                                                                    },
                                                                    "field_path": {
                                                                      "type": "string",
                                                                      "description": "Path of the field to select in the specified API version",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                },
                                                                "min_items": 1,
                                                                "max_items": 1
                                                              },
                                                              "resource_field_ref": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "container_name": {
                                                                      "type": "string",
                                                                      "required": true
                                                                    },
                                                                    "quantity": {
                                                                      "type": "string",
                                                                      "optional": true
                                                                    },
                                                                    "resource": {
                                                                      "type": "string",
                                                                      "description": "Resource to select",
                                                                      "required": true
                                                                    }
                                                                  }
                                                                },
                                                                "max_items": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "empty_dir": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "medium": {
                                                          "type": "string",
                                                          "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "fc": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                          "optional": true
                                                        },
                                                        "lun": {
                                                          "type": "number",
                                                          "description": "FC target lun number",
                                                          "required": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                                          "optional": true
                                                        },
                                                        "target_ww_ns": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "FC target worldwide names (WWNs)",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "flex_volume": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "driver": {
                                                          "type": "string",
                                                          "description": "Driver is the name of the driver to use for this volume.",
                                                          "required": true
                                                        },
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                                          "optional": true
                                                        },
                                                        "options": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "Extra command options if any.",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "secret_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "flocker": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "dataset_name": {
                                                          "type": "string",
                                                          "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                                          "optional": true
                                                        },
                                                        "dataset_uuid": {
                                                          "type": "string",
                                                          "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "gce_persistent_disk": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                                          "optional": true
                                                        },
                                                        "partition": {
                                                          "type": "number",
                                                          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                                          "optional": true
                                                        },
                                                        "pd_name": {
                                                          "type": "string",
                                                          "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                                          "required": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "git_repo": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "directory": {
                                                          "type": "string",
                                                          "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                                          "optional": true
                                                        },
                                                        "repository": {
                                                          "type": "string",
                                                          "description": "Repository URL",
                                                          "optional": true
                                                        },
                                                        "revision": {
                                                          "type": "string",
                                                          "description": "Commit hash for the specified revision.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "glusterfs": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "endpoints_name": {
                                                          "type": "string",
                                                          "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                                          "required": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                                          "required": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "host_path": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                                          "optional": true
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "iscsi": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                                          "optional": true
                                                        },
                                                        "iqn": {
                                                          "type": "string",
                                                          "description": "Target iSCSI Qualified Name.",
                                                          "required": true
                                                        },
                                                        "iscsi_interface": {
                                                          "type": "string",
                                                          "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                                          "optional": true
                                                        },
                                                        "lun": {
                                                          "type": "number",
                                                          "description": "iSCSI target lun number.",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                                          "optional": true
                                                        },
                                                        "target_portal": {
                                                          "type": "string",
                                                          "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "local": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "nfs": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                                          "required": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                                          "optional": true
                                                        },
                                                        "server": {
                                                          "type": "string",
                                                          "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "persistent_volume_claim": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "claim_name": {
                                                          "type": "string",
                                                          "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Will force the ReadOnly setting in VolumeMounts.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "photon_persistent_disk": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                          "optional": true
                                                        },
                                                        "pd_id": {
                                                          "type": "string",
                                                          "description": "ID that identifies Photon Controller persistent disk",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "quobyte": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "group": {
                                                          "type": "string",
                                                          "description": "Group to map volume access to Default is no group",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                                          "optional": true
                                                        },
                                                        "registry": {
                                                          "type": "string",
                                                          "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                                          "required": true
                                                        },
                                                        "user": {
                                                          "type": "string",
                                                          "description": "User to map volume access to Defaults to serivceaccount user",
                                                          "optional": true
                                                        },
                                                        "volume": {
                                                          "type": "string",
                                                          "description": "Volume is a string that references an already created Quobyte volume by name.",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "rbd": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "ceph_monitors": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                                          "required": true
                                                        },
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                                          "optional": true
                                                        },
                                                        "keyring": {
                                                          "type": "string",
                                                          "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "rados_user": {
                                                          "type": "string",
                                                          "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                                          "optional": true
                                                        },
                                                        "rbd_image": {
                                                          "type": "string",
                                                          "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                                          "required": true
                                                        },
                                                        "rbd_pool": {
                                                          "type": "string",
                                                          "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                                          "optional": true
                                                        },
                                                        "read_only": {
                                                          "type": "bool",
                                                          "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "secret_ref": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                                "optional": true
                                                              }
                                                            }
                                                          },
                                                          "max_items": 1
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "default_mode": {
                                                          "type": "string",
                                                          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                          "optional": true
                                                        },
                                                        "optional": {
                                                          "type": "bool",
                                                          "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                                          "optional": true
                                                        },
                                                        "secret_name": {
                                                          "type": "string",
                                                          "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "items": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The key to project.",
                                                                "optional": true
                                                              },
                                                              "mode": {
                                                                "type": "string",
                                                                "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "optional": true
                                                              },
                                                              "path": {
                                                                "type": "string",
                                                                "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "vsphere_volume": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "fs_type": {
                                                          "type": "string",
                                                          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                          "optional": true
                                                        },
                                                        "volume_path": {
                                                          "type": "string",
                                                          "description": "Path that identifies vSphere volume vmdk",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_daemonset": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the daemonset that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the daemonset. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the daemonset, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the daemonset must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this daemonset that can be used by clients to determine when daemonset has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this daemonset.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this daemonset. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "min_ready_seconds": {
                      "type": "number",
                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                      "optional": true
                    },
                    "revision_history_limit": {
                      "type": "number",
                      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "strategy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "description": "Type of deployment. Can be 'RollingUpdate' or 'OnDelete'. Default is RollingUpdate.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "rolling_update": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "max_unavailable": {
                                  "type": "string",
                                  "description": "The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the daemon set that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the daemon set. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the daemon set, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this daemon set that can be used by clients to determine when daemon set has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this daemon set.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this daemon set. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "active_deadline_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                  "optional": true
                                },
                                "automount_service_account_token": {
                                  "type": "bool",
                                  "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                  "optional": true
                                },
                                "dns_policy": {
                                  "type": "string",
                                  "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                                  "optional": true
                                },
                                "host_ipc": {
                                  "type": "bool",
                                  "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "host_network": {
                                  "type": "bool",
                                  "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                                  "optional": true
                                },
                                "host_pid": {
                                  "type": "bool",
                                  "description": "Use the host's pid namespace.",
                                  "optional": true
                                },
                                "hostname": {
                                  "type": "string",
                                  "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_name": {
                                  "type": "string",
                                  "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_selector": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                                  "optional": true
                                },
                                "priority_class_name": {
                                  "type": "string",
                                  "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                  "optional": true
                                },
                                "restart_policy": {
                                  "type": "string",
                                  "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                                  "optional": true
                                },
                                "service_account_name": {
                                  "type": "string",
                                  "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                                  "optional": true,
                                  "computed": true
                                },
                                "share_process_namespace": {
                                  "type": "bool",
                                  "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "subdomain": {
                                  "type": "string",
                                  "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                                  "optional": true
                                },
                                "termination_grace_period_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "node_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight is in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "preference": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "node_selector_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_anti_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "dns_config": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nameservers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                        "optional": true
                                      },
                                      "searches": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "option": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the option.",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of the option. Optional: Defaults to empty.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "host_aliases": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "hostnames": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Hostnames for the IP address.",
                                        "required": true
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP address of the host file entry.",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "image_pull_secrets": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "init_container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_group": {
                                        "type": "number",
                                        "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "supplemental_groups": {
                                        "type": [
                                          "set",
                                          "number"
                                        ],
                                        "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "toleration": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                        "optional": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                        "optional": true
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                        "optional": true
                                      },
                                      "toleration_seconds": {
                                        "type": "string",
                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "aws_elastic_block_store": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "caching_mode": {
                                              "type": "string",
                                              "description": "Host Caching mode: None, Read Only, Read Write.",
                                              "required": true
                                            },
                                            "data_disk_uri": {
                                              "type": "string",
                                              "description": "The URI the data disk in the blob storage",
                                              "required": true
                                            },
                                            "disk_name": {
                                              "type": "string",
                                              "description": "The Name of the data disk in the blob storage",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_file": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "The name of secret that contains Azure Storage Account Name and Key",
                                              "required": true
                                            },
                                            "share_name": {
                                              "type": "string",
                                              "description": "Share Name",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "ceph_fs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "secret_file": {
                                              "type": "string",
                                              "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "cinder": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "config_map": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "downward_api": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "required": true
                                                        },
                                                        "quantity": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "empty_dir": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "medium": {
                                              "type": "string",
                                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "fc": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "FC target lun number",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "target_ww_ns": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "FC target worldwide names (WWNs)",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flex_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "driver": {
                                              "type": "string",
                                              "description": "Driver is the name of the driver to use for this volume.",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                              "optional": true
                                            },
                                            "options": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "Extra command options if any.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flocker": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "dataset_name": {
                                              "type": "string",
                                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                              "optional": true
                                            },
                                            "dataset_uuid": {
                                              "type": "string",
                                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "gce_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "pd_name": {
                                              "type": "string",
                                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "git_repo": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "directory": {
                                              "type": "string",
                                              "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                              "optional": true
                                            },
                                            "repository": {
                                              "type": "string",
                                              "description": "Repository URL",
                                              "optional": true
                                            },
                                            "revision": {
                                              "type": "string",
                                              "description": "Commit hash for the specified revision.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "glusterfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "endpoints_name": {
                                              "type": "string",
                                              "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "host_path": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "iscsi": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                              "optional": true
                                            },
                                            "iqn": {
                                              "type": "string",
                                              "description": "Target iSCSI Qualified Name.",
                                              "required": true
                                            },
                                            "iscsi_interface": {
                                              "type": "string",
                                              "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "iSCSI target lun number.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                              "optional": true
                                            },
                                            "target_portal": {
                                              "type": "string",
                                              "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "local": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "nfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "optional": true
                                            },
                                            "server": {
                                              "type": "string",
                                              "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "persistent_volume_claim": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "claim_name": {
                                              "type": "string",
                                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Will force the ReadOnly setting in VolumeMounts.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "photon_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "pd_id": {
                                              "type": "string",
                                              "description": "ID that identifies Photon Controller persistent disk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "quobyte": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "group": {
                                              "type": "string",
                                              "description": "Group to map volume access to Default is no group",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                              "optional": true
                                            },
                                            "registry": {
                                              "type": "string",
                                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                              "required": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User to map volume access to Defaults to serivceaccount user",
                                              "optional": true
                                            },
                                            "volume": {
                                              "type": "string",
                                              "description": "Volume is a string that references an already created Quobyte volume by name.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "rbd": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "ceph_monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                              "optional": true
                                            },
                                            "keyring": {
                                              "type": "string",
                                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "rados_user": {
                                              "type": "string",
                                              "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "rbd_image": {
                                              "type": "string",
                                              "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "rbd_pool": {
                                              "type": "string",
                                              "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "vsphere_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "volume_path": {
                                              "type": "string",
                                              "description": "Path that identifies vSphere volume vmdk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_deployment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the deployment that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the deployment. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the deployment, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the deployment must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this deployment that can be used by clients to determine when deployment has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this deployment.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this deployment. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "min_ready_seconds": {
                      "type": "number",
                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                      "optional": true
                    },
                    "paused": {
                      "type": "bool",
                      "description": "Indicates that the deployment is paused.",
                      "optional": true
                    },
                    "progress_deadline_seconds": {
                      "type": "number",
                      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
                      "optional": true
                    },
                    "replicas": {
                      "type": "number",
                      "description": "The number of desired replicas. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
                      "optional": true
                    },
                    "revision_history_limit": {
                      "type": "number",
                      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "strategy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "description": "Type of deployment. Can be 'Recreate' or 'RollingUpdate'. Default is RollingUpdate.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "rolling_update": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "max_surge": {
                                  "type": "string",
                                  "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
                                  "optional": true
                                },
                                "max_unavailable": {
                                  "type": "string",
                                  "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the pod that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the pod. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the pod, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace defines the space within which name of the pod must be unique.",
                                  "optional": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this pod that can be used by clients to determine when pod has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this pod.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this pod. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "active_deadline_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                  "optional": true
                                },
                                "automount_service_account_token": {
                                  "type": "bool",
                                  "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                  "optional": true
                                },
                                "dns_policy": {
                                  "type": "string",
                                  "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                                  "optional": true
                                },
                                "host_ipc": {
                                  "type": "bool",
                                  "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "host_network": {
                                  "type": "bool",
                                  "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                                  "optional": true
                                },
                                "host_pid": {
                                  "type": "bool",
                                  "description": "Use the host's pid namespace.",
                                  "optional": true
                                },
                                "hostname": {
                                  "type": "string",
                                  "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_name": {
                                  "type": "string",
                                  "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_selector": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                                  "optional": true
                                },
                                "priority_class_name": {
                                  "type": "string",
                                  "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                  "optional": true
                                },
                                "restart_policy": {
                                  "type": "string",
                                  "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                                  "optional": true
                                },
                                "service_account_name": {
                                  "type": "string",
                                  "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                                  "optional": true,
                                  "computed": true
                                },
                                "share_process_namespace": {
                                  "type": "bool",
                                  "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "subdomain": {
                                  "type": "string",
                                  "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                                  "optional": true
                                },
                                "termination_grace_period_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "node_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight is in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "preference": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "node_selector_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_anti_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "dns_config": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nameservers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                        "optional": true
                                      },
                                      "searches": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "option": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the option.",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of the option. Optional: Defaults to empty.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "host_aliases": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "hostnames": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Hostnames for the IP address.",
                                        "required": true
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP address of the host file entry.",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "image_pull_secrets": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "init_container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_group": {
                                        "type": "number",
                                        "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "supplemental_groups": {
                                        "type": [
                                          "set",
                                          "number"
                                        ],
                                        "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "toleration": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                        "optional": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                        "optional": true
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                        "optional": true
                                      },
                                      "toleration_seconds": {
                                        "type": "string",
                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "aws_elastic_block_store": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "caching_mode": {
                                              "type": "string",
                                              "description": "Host Caching mode: None, Read Only, Read Write.",
                                              "required": true
                                            },
                                            "data_disk_uri": {
                                              "type": "string",
                                              "description": "The URI the data disk in the blob storage",
                                              "required": true
                                            },
                                            "disk_name": {
                                              "type": "string",
                                              "description": "The Name of the data disk in the blob storage",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_file": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "The name of secret that contains Azure Storage Account Name and Key",
                                              "required": true
                                            },
                                            "share_name": {
                                              "type": "string",
                                              "description": "Share Name",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "ceph_fs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "secret_file": {
                                              "type": "string",
                                              "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "cinder": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "config_map": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "downward_api": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "required": true
                                                        },
                                                        "quantity": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "empty_dir": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "medium": {
                                              "type": "string",
                                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "fc": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "FC target lun number",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "target_ww_ns": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "FC target worldwide names (WWNs)",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flex_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "driver": {
                                              "type": "string",
                                              "description": "Driver is the name of the driver to use for this volume.",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                              "optional": true
                                            },
                                            "options": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "Extra command options if any.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flocker": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "dataset_name": {
                                              "type": "string",
                                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                              "optional": true
                                            },
                                            "dataset_uuid": {
                                              "type": "string",
                                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "gce_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "pd_name": {
                                              "type": "string",
                                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "git_repo": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "directory": {
                                              "type": "string",
                                              "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                              "optional": true
                                            },
                                            "repository": {
                                              "type": "string",
                                              "description": "Repository URL",
                                              "optional": true
                                            },
                                            "revision": {
                                              "type": "string",
                                              "description": "Commit hash for the specified revision.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "glusterfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "endpoints_name": {
                                              "type": "string",
                                              "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "host_path": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "iscsi": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                              "optional": true
                                            },
                                            "iqn": {
                                              "type": "string",
                                              "description": "Target iSCSI Qualified Name.",
                                              "required": true
                                            },
                                            "iscsi_interface": {
                                              "type": "string",
                                              "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "iSCSI target lun number.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                              "optional": true
                                            },
                                            "target_portal": {
                                              "type": "string",
                                              "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "local": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "nfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "optional": true
                                            },
                                            "server": {
                                              "type": "string",
                                              "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "persistent_volume_claim": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "claim_name": {
                                              "type": "string",
                                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Will force the ReadOnly setting in VolumeMounts.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "photon_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "pd_id": {
                                              "type": "string",
                                              "description": "ID that identifies Photon Controller persistent disk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "quobyte": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "group": {
                                              "type": "string",
                                              "description": "Group to map volume access to Default is no group",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                              "optional": true
                                            },
                                            "registry": {
                                              "type": "string",
                                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                              "required": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User to map volume access to Defaults to serivceaccount user",
                                              "optional": true
                                            },
                                            "volume": {
                                              "type": "string",
                                              "description": "Volume is a string that references an already created Quobyte volume by name.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "rbd": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "ceph_monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                              "optional": true
                                            },
                                            "keyring": {
                                              "type": "string",
                                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "rados_user": {
                                              "type": "string",
                                              "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "rbd_image": {
                                              "type": "string",
                                              "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "rbd_pool": {
                                              "type": "string",
                                              "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "vsphere_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "volume_path": {
                                              "type": "string",
                                              "description": "Path that identifies vSphere volume vmdk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_endpoints": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the endpoints that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the endpoints. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the endpoints, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the endpoints must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this endpoints that can be used by clients to determine when endpoints has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this endpoints.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this endpoints. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "subset": {
                "nesting_mode": "set",
                "block": {
                  "block_types": {
                    "address": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "hostname": {
                            "type": "string",
                            "description": "The Hostname of this endpoint.",
                            "optional": true
                          },
                          "ip": {
                            "type": "string",
                            "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24).",
                            "required": true
                          },
                          "node_name": {
                            "type": "string",
                            "description": "Node hosting this endpoint. This can be used to determine endpoints local to a node.",
                            "optional": true
                          }
                        }
                      }
                    },
                    "not_ready_address": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "hostname": {
                            "type": "string",
                            "description": "The Hostname of this endpoint.",
                            "optional": true
                          },
                          "ip": {
                            "type": "string",
                            "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24).",
                            "required": true
                          },
                          "node_name": {
                            "type": "string",
                            "description": "Node hosting this endpoint. This can be used to determine endpoints local to a node.",
                            "optional": true
                          }
                        }
                      }
                    },
                    "port": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "The name of this port within the endpoint. Must be a DNS_LABEL. Optional if only one Port is defined on this endpoint.",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "The port that will be exposed by this endpoint.",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_horizontal_pod_autoscaler": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the horizontal pod autoscaler that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the horizontal pod autoscaler. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the horizontal pod autoscaler, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the horizontal pod autoscaler must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this horizontal pod autoscaler that can be used by clients to determine when horizontal pod autoscaler has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this horizontal pod autoscaler.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this horizontal pod autoscaler. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_replicas": {
                      "type": "number",
                      "description": "Upper limit for the number of pods that can be set by the autoscaler.",
                      "required": true
                    },
                    "min_replicas": {
                      "type": "number",
                      "description": "Lower limit for the number of pods that can be set by the autoscaler, defaults to `1`.",
                      "optional": true
                    },
                    "target_cpu_utilization_percentage": {
                      "type": "number",
                      "description": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods. If not specified the default autoscaling policy will be used.",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "metric": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "description": "type is the type of metric source. It should be one of \"Object\", \"Pods\", \"External\" or \"Resource\", each mapping to a matching field in the object.",
                            "required": true
                          }
                        },
                        "block_types": {
                          "external": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "metric": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "name is the name of the given metric",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "selector": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "match_labels": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                },
                                "target": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "average_utilization": {
                                        "type": "number",
                                        "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
                                        "optional": true
                                      },
                                      "average_value": {
                                        "type": "string",
                                        "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "value is the target value of the metric (as a quantity).",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "object": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "described_object": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "api_version": {
                                        "type": "string",
                                        "description": "API version of the referent",
                                        "required": true
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "required": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                },
                                "metric": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "name is the name of the given metric",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "selector": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "match_labels": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                },
                                "target": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "average_utilization": {
                                        "type": "number",
                                        "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
                                        "optional": true
                                      },
                                      "average_value": {
                                        "type": "string",
                                        "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "value is the target value of the metric (as a quantity).",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "pods": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "metric": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "name is the name of the given metric",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "selector": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "match_labels": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                },
                                "target": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "average_utilization": {
                                        "type": "number",
                                        "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
                                        "optional": true
                                      },
                                      "average_value": {
                                        "type": "string",
                                        "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "value is the target value of the metric (as a quantity).",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "resource": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "name is the name of the resource in question.",
                                  "required": true
                                }
                              },
                              "block_types": {
                                "target": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "average_utilization": {
                                        "type": "number",
                                        "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
                                        "optional": true
                                      },
                                      "average_value": {
                                        "type": "string",
                                        "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "value is the target value of the metric (as a quantity).",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      }
                    },
                    "scale_target_ref": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "api_version": {
                            "type": "string",
                            "description": "API version of the referent",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "Kind of the referent. e.g. `ReplicationController`. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
                            "required": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                            "required": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_ingress": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_ingress": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "hostname": "string",
                      "ip": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "wait_for_load_balancer": {
                "type": "bool",
                "description": "Terraform will wait for the load balancer to have at least 1 endpoint before considering the resource created.",
                "optional": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the ingress that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the ingress. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the ingress, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the ingress must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this ingress that can be used by clients to determine when ingress has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this ingress.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this ingress. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "backend": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "service_name": {
                            "type": "string",
                            "description": "Specifies the name of the referenced service.",
                            "optional": true
                          },
                          "service_port": {
                            "type": "string",
                            "description": "Specifies the port of the referenced service.",
                            "optional": true,
                            "computed": true
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "rule": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "http": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "path": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "path": {
                                        "type": "string",
                                        "description": "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "backend": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "service_name": {
                                              "type": "string",
                                              "description": "Specifies the name of the referenced service.",
                                              "optional": true
                                            },
                                            "service_port": {
                                              "type": "string",
                                              "description": "Specifies the port of the referenced service.",
                                              "optional": true,
                                              "computed": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "min_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      }
                    },
                    "tls": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "hosts": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
                            "optional": true
                          },
                          "secret_name": {
                            "type": "string",
                            "description": "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_job": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the job that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the job. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the job, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the job must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this job that can be used by clients to determine when job has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this job.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this job. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "active_deadline_seconds": {
                      "type": "number",
                      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                      "optional": true
                    },
                    "backoff_limit": {
                      "type": "number",
                      "description": "Specifies the number of retries before marking this job failed. Defaults to 6",
                      "optional": true
                    },
                    "completions": {
                      "type": "number",
                      "description": "Specifies the desired number of successfully finished pods the job should be run with. Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value. Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                      "optional": true
                    },
                    "manual_selector": {
                      "type": "bool",
                      "description": "Controls generation of pod labels and pod selectors. Leave unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template. When true, the user is responsyble for picking unique labels and specifying the selector. Failure to pick a unique label may cause this and other jobs to not function correctly. More info: https://git.k8s.io/community/contributors/design-proposals/selector-generation.md",
                      "optional": true
                    },
                    "parallelism": {
                      "type": "number",
                      "description": "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                      "optional": true
                    },
                    "ttl_seconds_after_finished": {
                      "type": "number",
                      "description": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the job that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the job. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the job, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this job that can be used by clients to determine when job has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this job.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this job. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "active_deadline_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                  "optional": true
                                },
                                "automount_service_account_token": {
                                  "type": "bool",
                                  "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                  "optional": true
                                },
                                "dns_policy": {
                                  "type": "string",
                                  "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                                  "optional": true
                                },
                                "host_ipc": {
                                  "type": "bool",
                                  "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "host_network": {
                                  "type": "bool",
                                  "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                                  "optional": true
                                },
                                "host_pid": {
                                  "type": "bool",
                                  "description": "Use the host's pid namespace.",
                                  "optional": true
                                },
                                "hostname": {
                                  "type": "string",
                                  "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_name": {
                                  "type": "string",
                                  "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_selector": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                                  "optional": true
                                },
                                "priority_class_name": {
                                  "type": "string",
                                  "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                  "optional": true
                                },
                                "restart_policy": {
                                  "type": "string",
                                  "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                                  "optional": true
                                },
                                "service_account_name": {
                                  "type": "string",
                                  "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                                  "optional": true,
                                  "computed": true
                                },
                                "share_process_namespace": {
                                  "type": "bool",
                                  "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "subdomain": {
                                  "type": "string",
                                  "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                                  "optional": true
                                },
                                "termination_grace_period_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "node_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight is in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "preference": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "node_selector_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_anti_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "dns_config": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nameservers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                        "optional": true
                                      },
                                      "searches": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "option": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the option.",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of the option. Optional: Defaults to empty.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "host_aliases": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "hostnames": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Hostnames for the IP address.",
                                        "required": true
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP address of the host file entry.",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "image_pull_secrets": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "init_container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_group": {
                                        "type": "number",
                                        "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "supplemental_groups": {
                                        "type": [
                                          "set",
                                          "number"
                                        ],
                                        "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "toleration": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                        "optional": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                        "optional": true
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                        "optional": true
                                      },
                                      "toleration_seconds": {
                                        "type": "string",
                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "aws_elastic_block_store": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "caching_mode": {
                                              "type": "string",
                                              "description": "Host Caching mode: None, Read Only, Read Write.",
                                              "required": true
                                            },
                                            "data_disk_uri": {
                                              "type": "string",
                                              "description": "The URI the data disk in the blob storage",
                                              "required": true
                                            },
                                            "disk_name": {
                                              "type": "string",
                                              "description": "The Name of the data disk in the blob storage",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_file": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "The name of secret that contains Azure Storage Account Name and Key",
                                              "required": true
                                            },
                                            "share_name": {
                                              "type": "string",
                                              "description": "Share Name",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "ceph_fs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "secret_file": {
                                              "type": "string",
                                              "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "cinder": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "config_map": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "downward_api": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "required": true
                                                        },
                                                        "quantity": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "empty_dir": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "medium": {
                                              "type": "string",
                                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "fc": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "FC target lun number",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "target_ww_ns": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "FC target worldwide names (WWNs)",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flex_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "driver": {
                                              "type": "string",
                                              "description": "Driver is the name of the driver to use for this volume.",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                              "optional": true
                                            },
                                            "options": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "Extra command options if any.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flocker": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "dataset_name": {
                                              "type": "string",
                                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                              "optional": true
                                            },
                                            "dataset_uuid": {
                                              "type": "string",
                                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "gce_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "pd_name": {
                                              "type": "string",
                                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "git_repo": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "directory": {
                                              "type": "string",
                                              "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                              "optional": true
                                            },
                                            "repository": {
                                              "type": "string",
                                              "description": "Repository URL",
                                              "optional": true
                                            },
                                            "revision": {
                                              "type": "string",
                                              "description": "Commit hash for the specified revision.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "glusterfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "endpoints_name": {
                                              "type": "string",
                                              "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "host_path": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "iscsi": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                              "optional": true
                                            },
                                            "iqn": {
                                              "type": "string",
                                              "description": "Target iSCSI Qualified Name.",
                                              "required": true
                                            },
                                            "iscsi_interface": {
                                              "type": "string",
                                              "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "iSCSI target lun number.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                              "optional": true
                                            },
                                            "target_portal": {
                                              "type": "string",
                                              "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "local": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "nfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "optional": true
                                            },
                                            "server": {
                                              "type": "string",
                                              "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "persistent_volume_claim": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "claim_name": {
                                              "type": "string",
                                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Will force the ReadOnly setting in VolumeMounts.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "photon_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "pd_id": {
                                              "type": "string",
                                              "description": "ID that identifies Photon Controller persistent disk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "quobyte": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "group": {
                                              "type": "string",
                                              "description": "Group to map volume access to Default is no group",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                              "optional": true
                                            },
                                            "registry": {
                                              "type": "string",
                                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                              "required": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User to map volume access to Defaults to serivceaccount user",
                                              "optional": true
                                            },
                                            "volume": {
                                              "type": "string",
                                              "description": "Volume is a string that references an already created Quobyte volume by name.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "rbd": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "ceph_monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                              "optional": true
                                            },
                                            "keyring": {
                                              "type": "string",
                                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "rados_user": {
                                              "type": "string",
                                              "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "rbd_image": {
                                              "type": "string",
                                              "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "rbd_pool": {
                                              "type": "string",
                                              "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "vsphere_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "volume_path": {
                                              "type": "string",
                                              "description": "Path that identifies vSphere volume vmdk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_limit_range": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the limit range that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the limit range. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the limit range, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the limit range must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this limit range that can be used by clients to determine when limit range has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this limit range.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this limit range. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "limit": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "default": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
                            "optional": true
                          },
                          "default_request": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "The default resource requirement request value by resource name if resource request is omitted.",
                            "optional": true,
                            "computed": true
                          },
                          "max": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Max usage constraints on this kind by resource name.",
                            "optional": true
                          },
                          "max_limit_request_ratio": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "The named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
                            "optional": true
                          },
                          "min": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Min usage constraints on this kind by resource name.",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of resource that this limit applies to.",
                            "optional": true
                          }
                        }
                      }
                    }
                  }
                },
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_mutating_webhook_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the mutating webhook configuration that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the mutating webhook configuration. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the mutating webhook configuration, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this mutating webhook configuration that can be used by clients to determine when mutating webhook configuration has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this mutating webhook configuration.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this mutating webhook configuration. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "webhook": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "admission_review_versions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
                      "optional": true
                    },
                    "failure_policy": {
                      "type": "string",
                      "description": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.",
                      "optional": true
                    },
                    "match_policy": {
                      "type": "string",
                      "description": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
                      "required": true
                    },
                    "reinvocation_policy": {
                      "type": "string",
                      "description": "reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are \"Never\" and \"IfNeeded\".\n\nNever: the webhook will not be called more than once in a single admission evaluation.\n\nIfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.\n\nDefaults to \"Never\".",
                      "optional": true
                    },
                    "side_effects": {
                      "type": "string",
                      "description": "SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
                      "optional": true
                    },
                    "timeout_seconds": {
                      "type": "number",
                      "description": "TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "client_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ca_bundle": {
                            "type": "string",
                            "description": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
                            "optional": true
                          },
                          "url": {
                            "type": "string",
                            "description": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "service": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "`name` is the name of the service. Required",
                                  "required": true
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "`namespace` is the namespace of the service. Required",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "`path` is an optional URL path which will be sent in any request to this service.",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "namespace_selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "object_selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "rule": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "api_groups": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          },
                          "api_versions": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          },
                          "operations": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.",
                            "required": true
                          },
                          "resources": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "kubernetes_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the namespace that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the namespace. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the namespace, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this namespace that can be used by clients to determine when namespace has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this namespace.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this namespace. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_network_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the network policy that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the network policy. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the network policy, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the network policy must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this network policy that can be used by clients to determine when network policy has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this network policy.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this network policy. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "policy_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of rule types that the NetworkPolicy relates to. Valid options are \"Ingress\", \"Egress\", or \"Ingress,Egress\". If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
                      "required": true
                    }
                  },
                  "block_types": {
                    "egress": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "ports": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "port": {
                                  "type": "string",
                                  "description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.",
                                  "optional": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "to": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "ip_block": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "cidr": {
                                        "type": "string",
                                        "description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\"",
                                        "optional": true
                                      },
                                      "except": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "namespace_selector": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "match_labels": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "optional": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                              "optional": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "pod_selector": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "match_labels": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "optional": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                              "optional": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ingress": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "from": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "ip_block": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "cidr": {
                                        "type": "string",
                                        "description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\"",
                                        "optional": true
                                      },
                                      "except": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "namespace_selector": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "match_labels": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "optional": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                              "optional": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "pod_selector": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "match_labels": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "optional": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                              "optional": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          },
                          "ports": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "port": {
                                  "type": "string",
                                  "description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.",
                                  "optional": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pod_selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_persistent_volume": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the persistent volume that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the persistent volume, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this persistent volume that can be used by clients to determine when persistent volume has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this persistent volume.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this persistent volume. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "access_modes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes",
                      "required": true
                    },
                    "capacity": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity",
                      "required": true
                    },
                    "mount_options": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid.",
                      "optional": true
                    },
                    "persistent_volume_reclaim_policy": {
                      "type": "string",
                      "description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy",
                      "optional": true
                    },
                    "storage_class_name": {
                      "type": "string",
                      "description": "A description of the persistent volume's class. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "node_affinity": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "required": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "node_selector_term": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "required": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists`, `DoesNotExist`, `Gt`, and `Lt`.",
                                              "required": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "match_fields": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "required": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists`, `DoesNotExist`, `Gt`, and `Lt`.",
                                              "required": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "min_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "persistent_volume_source": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "aws_elastic_block_store": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                  "optional": true
                                },
                                "partition": {
                                  "type": "number",
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                  "optional": true
                                },
                                "volume_id": {
                                  "type": "string",
                                  "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "azure_disk": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "caching_mode": {
                                  "type": "string",
                                  "description": "Host Caching mode: None, Read Only, Read Write.",
                                  "required": true
                                },
                                "data_disk_uri": {
                                  "type": "string",
                                  "description": "The URI the data disk in the blob storage",
                                  "required": true
                                },
                                "disk_name": {
                                  "type": "string",
                                  "description": "The Name of the data disk in the blob storage",
                                  "required": true
                                },
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "azure_file": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                },
                                "secret_name": {
                                  "type": "string",
                                  "description": "The name of secret that contains Azure Storage Account Name and Key",
                                  "required": true
                                },
                                "share_name": {
                                  "type": "string",
                                  "description": "Share Name",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "ceph_fs": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "monitors": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "optional": true
                                },
                                "secret_file": {
                                  "type": "string",
                                  "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "optional": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "cinder": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "optional": true
                                },
                                "volume_id": {
                                  "type": "string",
                                  "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "fc": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "lun": {
                                  "type": "number",
                                  "description": "FC target lun number",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                },
                                "target_ww_ns": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "FC target worldwide names (WWNs)",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "flex_volume": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "driver": {
                                  "type": "string",
                                  "description": "Driver is the name of the driver to use for this volume.",
                                  "required": true
                                },
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                  "optional": true
                                },
                                "options": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Extra command options if any.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "flocker": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "dataset_name": {
                                  "type": "string",
                                  "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                  "optional": true
                                },
                                "dataset_uuid": {
                                  "type": "string",
                                  "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "gce_persistent_disk": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "optional": true
                                },
                                "partition": {
                                  "type": "number",
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "optional": true
                                },
                                "pd_name": {
                                  "type": "string",
                                  "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "glusterfs": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "endpoints_name": {
                                  "type": "string",
                                  "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "host_path": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "path": {
                                  "type": "string",
                                  "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                  "optional": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "iscsi": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                  "optional": true
                                },
                                "iqn": {
                                  "type": "string",
                                  "description": "Target iSCSI Qualified Name.",
                                  "required": true
                                },
                                "iscsi_interface": {
                                  "type": "string",
                                  "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                  "optional": true
                                },
                                "lun": {
                                  "type": "number",
                                  "description": "iSCSI target lun number.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                  "optional": true
                                },
                                "target_portal": {
                                  "type": "string",
                                  "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "local": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "path": {
                                  "type": "string",
                                  "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "nfs": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "path": {
                                  "type": "string",
                                  "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                  "optional": true
                                },
                                "server": {
                                  "type": "string",
                                  "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "photon_persistent_disk": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "pd_id": {
                                  "type": "string",
                                  "description": "ID that identifies Photon Controller persistent disk",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "quobyte": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "group": {
                                  "type": "string",
                                  "description": "Group to map volume access to Default is no group",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                  "optional": true
                                },
                                "registry": {
                                  "type": "string",
                                  "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                  "required": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "User to map volume access to Defaults to serivceaccount user",
                                  "optional": true
                                },
                                "volume": {
                                  "type": "string",
                                  "description": "Volume is a string that references an already created Quobyte volume by name.",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "rbd": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "ceph_monitors": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "required": true
                                },
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                  "optional": true
                                },
                                "keyring": {
                                  "type": "string",
                                  "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "optional": true,
                                  "computed": true
                                },
                                "rados_user": {
                                  "type": "string",
                                  "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "optional": true
                                },
                                "rbd_image": {
                                  "type": "string",
                                  "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "required": true
                                },
                                "rbd_pool": {
                                  "type": "string",
                                  "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "vsphere_volume": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "volume_path": {
                                  "type": "string",
                                  "description": "Path that identifies vSphere volume vmdk",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_persistent_volume_claim": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "wait_until_bound": {
                "type": "bool",
                "description": "Whether to wait for the claim to reach `Bound` state (to find volume in which to claim the space)",
                "optional": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the persistent volume claim that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume claim. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the persistent volume claim, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the persistent volume claim must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this persistent volume claim that can be used by clients to determine when persistent volume claim has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this persistent volume claim.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this persistent volume claim. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "access_modes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1",
                      "required": true
                    },
                    "storage_class_name": {
                      "type": "string",
                      "description": "Name of the storage class requested by the claim",
                      "optional": true,
                      "computed": true
                    },
                    "volume_name": {
                      "type": "string",
                      "description": "The binding reference to the PersistentVolume backing this claim.",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "resources": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "limits": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                            "optional": true
                          },
                          "requests": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_pod": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the pod that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the pod. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the pod, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the pod must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this pod that can be used by clients to determine when pod has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this pod.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this pod. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "active_deadline_seconds": {
                      "type": "number",
                      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                      "optional": true
                    },
                    "automount_service_account_token": {
                      "type": "bool",
                      "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                      "optional": true
                    },
                    "dns_policy": {
                      "type": "string",
                      "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                      "optional": true
                    },
                    "host_ipc": {
                      "type": "bool",
                      "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                      "optional": true
                    },
                    "host_network": {
                      "type": "bool",
                      "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                      "optional": true
                    },
                    "host_pid": {
                      "type": "bool",
                      "description": "Use the host's pid namespace.",
                      "optional": true
                    },
                    "hostname": {
                      "type": "string",
                      "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                      "optional": true,
                      "computed": true
                    },
                    "node_name": {
                      "type": "string",
                      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                      "optional": true,
                      "computed": true
                    },
                    "node_selector": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                      "optional": true
                    },
                    "priority_class_name": {
                      "type": "string",
                      "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                      "optional": true
                    },
                    "restart_policy": {
                      "type": "string",
                      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                      "optional": true
                    },
                    "service_account_name": {
                      "type": "string",
                      "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                      "optional": true,
                      "computed": true
                    },
                    "share_process_namespace": {
                      "type": "bool",
                      "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                      "optional": true
                    },
                    "subdomain": {
                      "type": "string",
                      "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                      "optional": true
                    },
                    "termination_grace_period_seconds": {
                      "type": "number",
                      "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "affinity": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "node_affinity": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "preferred_during_scheduling_ignored_during_execution": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "weight": {
                                        "type": "number",
                                        "description": "weight is in the range 1-100",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "preference": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_items": 1,
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "required_during_scheduling_ignored_during_execution": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "node_selector_term": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "pod_affinity": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "preferred_during_scheduling_ignored_during_execution": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "weight": {
                                        "type": "number",
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "pod_affinity_term": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "namespaces": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                              "optional": true
                                            },
                                            "topology_key": {
                                              "type": "string",
                                              "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "label_selector": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "match_labels": {
                                                    "type": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "match_expressions": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The label key that the selector applies to.",
                                                          "optional": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                          "optional": true
                                                        },
                                                        "values": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_items": 1,
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "required_during_scheduling_ignored_during_execution": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "namespaces": {
                                        "type": [
                                          "set",
                                          "string"
                                        ],
                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                        "optional": true
                                      },
                                      "topology_key": {
                                        "type": "string",
                                        "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "label_selector": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "match_labels": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "pod_anti_affinity": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "preferred_during_scheduling_ignored_during_execution": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "weight": {
                                        "type": "number",
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "pod_affinity_term": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "namespaces": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                              "optional": true
                                            },
                                            "topology_key": {
                                              "type": "string",
                                              "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "label_selector": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "match_labels": {
                                                    "type": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "match_expressions": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The label key that the selector applies to.",
                                                          "optional": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                          "optional": true
                                                        },
                                                        "values": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "min_items": 1,
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "required_during_scheduling_ignored_during_execution": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "namespaces": {
                                        "type": [
                                          "set",
                                          "string"
                                        ],
                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                        "optional": true
                                      },
                                      "topology_key": {
                                        "type": "string",
                                        "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "label_selector": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "match_labels": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "match_expressions": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The label key that the selector applies to.",
                                                    "optional": true
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                    "optional": true
                                                  },
                                                  "values": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "container": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "args": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                            "optional": true
                          },
                          "command": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                            "optional": true
                          },
                          "image": {
                            "type": "string",
                            "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                            "optional": true
                          },
                          "image_pull_policy": {
                            "type": "string",
                            "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                            "required": true
                          },
                          "stdin": {
                            "type": "bool",
                            "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                            "optional": true
                          },
                          "stdin_once": {
                            "type": "bool",
                            "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                            "optional": true
                          },
                          "termination_message_path": {
                            "type": "string",
                            "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                            "optional": true
                          },
                          "tty": {
                            "type": "bool",
                            "description": "Whether this container should allocate a TTY for itself",
                            "optional": true
                          },
                          "working_dir": {
                            "type": "string",
                            "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "env": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                  "required": true
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "value_from": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "config_map_key_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The key to select.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "field_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "optional": true
                                            },
                                            "field_path": {
                                              "type": "string",
                                              "description": "Path of the field to select in the specified API version",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resource_field_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_name": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "resource": {
                                              "type": "string",
                                              "description": "Resource to select",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret_key_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The key of the secret to select from. Must be a valid secret key.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          },
                          "env_from": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "prefix": {
                                  "type": "string",
                                  "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "config_map_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      },
                                      "optional": {
                                        "type": "bool",
                                        "description": "Specify whether the ConfigMap must be defined",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "required": true
                                      },
                                      "optional": {
                                        "type": "bool",
                                        "description": "Specify whether the Secret must be defined",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          },
                          "lifecycle": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "post_start": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "pre_stop": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "liveness_probe": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "failure_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                  "optional": true
                                },
                                "initial_delay_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                },
                                "period_seconds": {
                                  "type": "number",
                                  "description": "How often (in seconds) to perform the probe",
                                  "optional": true
                                },
                                "success_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "optional": true
                                },
                                "timeout_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "exec": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "http_get": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path to access on the HTTP server.",
                                        "optional": true
                                      },
                                      "port": {
                                        "type": "string",
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "optional": true
                                      },
                                      "scheme": {
                                        "type": "string",
                                        "description": "Scheme to use for connecting to the host.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "http_header": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "The header field name",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The header field value",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "tcp_socket": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "port": {
                                        "type": "string",
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "port": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "container_port": {
                                  "type": "number",
                                  "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                  "required": true
                                },
                                "host_ip": {
                                  "type": "string",
                                  "description": "What host IP to bind the external port to.",
                                  "optional": true
                                },
                                "host_port": {
                                  "type": "number",
                                  "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                  "optional": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "readiness_probe": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "failure_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                  "optional": true
                                },
                                "initial_delay_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                },
                                "period_seconds": {
                                  "type": "number",
                                  "description": "How often (in seconds) to perform the probe",
                                  "optional": true
                                },
                                "success_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "optional": true
                                },
                                "timeout_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "exec": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "http_get": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path to access on the HTTP server.",
                                        "optional": true
                                      },
                                      "port": {
                                        "type": "string",
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "optional": true
                                      },
                                      "scheme": {
                                        "type": "string",
                                        "description": "Scheme to use for connecting to the host.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "http_header": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "The header field name",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The header field value",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "tcp_socket": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "port": {
                                        "type": "string",
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "resources": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "limits": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "cpu": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "memory": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "requests": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "cpu": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "memory": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "security_context": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "allow_privilege_escalation": {
                                  "type": "bool",
                                  "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                  "optional": true
                                },
                                "privileged": {
                                  "type": "bool",
                                  "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                  "optional": true
                                },
                                "read_only_root_filesystem": {
                                  "type": "bool",
                                  "description": "Whether this container has a read-only root filesystem. Default is false.",
                                  "optional": true
                                },
                                "run_as_group": {
                                  "type": "number",
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                },
                                "run_as_non_root": {
                                  "type": "bool",
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                },
                                "run_as_user": {
                                  "type": "number",
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "capabilities": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "add": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Added capabilities",
                                        "optional": true
                                      },
                                      "drop": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Removed capabilities",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "se_linux_options": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "level": {
                                        "type": "string",
                                        "description": "Level is SELinux level label that applies to the container.",
                                        "optional": true
                                      },
                                      "role": {
                                        "type": "string",
                                        "description": "Role is a SELinux role label that applies to the container.",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type is a SELinux type label that applies to the container.",
                                        "optional": true
                                      },
                                      "user": {
                                        "type": "string",
                                        "description": "User is a SELinux user label that applies to the container.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "startup_probe": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "failure_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                  "optional": true
                                },
                                "initial_delay_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                },
                                "period_seconds": {
                                  "type": "number",
                                  "description": "How often (in seconds) to perform the probe",
                                  "optional": true
                                },
                                "success_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "optional": true
                                },
                                "timeout_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "exec": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "http_get": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path to access on the HTTP server.",
                                        "optional": true
                                      },
                                      "port": {
                                        "type": "string",
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "optional": true
                                      },
                                      "scheme": {
                                        "type": "string",
                                        "description": "Scheme to use for connecting to the host.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "http_header": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "The header field name",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The header field value",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "tcp_socket": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "port": {
                                        "type": "string",
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "volume_mount": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "mount_path": {
                                  "type": "string",
                                  "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                  "required": true
                                },
                                "mount_propagation": {
                                  "type": "string",
                                  "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "This must match the Name of a Volume.",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                  "optional": true
                                },
                                "sub_path": {
                                  "type": "string",
                                  "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "dns_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "nameservers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                            "optional": true
                          },
                          "searches": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "option": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the option.",
                                  "required": true
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value of the option. Optional: Defaults to empty.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "host_aliases": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "hostnames": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Hostnames for the IP address.",
                            "required": true
                          },
                          "ip": {
                            "type": "string",
                            "description": "IP address of the host file entry.",
                            "required": true
                          }
                        }
                      }
                    },
                    "image_pull_secrets": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                            "required": true
                          }
                        }
                      }
                    },
                    "init_container": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "args": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                            "optional": true
                          },
                          "command": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                            "optional": true
                          },
                          "image": {
                            "type": "string",
                            "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                            "optional": true
                          },
                          "image_pull_policy": {
                            "type": "string",
                            "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                            "required": true
                          },
                          "stdin": {
                            "type": "bool",
                            "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                            "optional": true
                          },
                          "stdin_once": {
                            "type": "bool",
                            "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                            "optional": true
                          },
                          "termination_message_path": {
                            "type": "string",
                            "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                            "optional": true
                          },
                          "tty": {
                            "type": "bool",
                            "description": "Whether this container should allocate a TTY for itself",
                            "optional": true
                          },
                          "working_dir": {
                            "type": "string",
                            "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "env": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                  "required": true
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "value_from": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "config_map_key_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The key to select.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "field_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "optional": true
                                            },
                                            "field_path": {
                                              "type": "string",
                                              "description": "Path of the field to select in the specified API version",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resource_field_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_name": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "resource": {
                                              "type": "string",
                                              "description": "Resource to select",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret_key_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The key of the secret to select from. Must be a valid secret key.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          },
                          "env_from": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "prefix": {
                                  "type": "string",
                                  "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "config_map_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      },
                                      "optional": {
                                        "type": "bool",
                                        "description": "Specify whether the ConfigMap must be defined",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "required": true
                                      },
                                      "optional": {
                                        "type": "bool",
                                        "description": "Specify whether the Secret must be defined",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          },
                          "lifecycle": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "post_start": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "pre_stop": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "liveness_probe": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "failure_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                  "optional": true
                                },
                                "initial_delay_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                },
                                "period_seconds": {
                                  "type": "number",
                                  "description": "How often (in seconds) to perform the probe",
                                  "optional": true
                                },
                                "success_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "optional": true
                                },
                                "timeout_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "exec": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "http_get": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path to access on the HTTP server.",
                                        "optional": true
                                      },
                                      "port": {
                                        "type": "string",
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "optional": true
                                      },
                                      "scheme": {
                                        "type": "string",
                                        "description": "Scheme to use for connecting to the host.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "http_header": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "The header field name",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The header field value",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "tcp_socket": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "port": {
                                        "type": "string",
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "port": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "container_port": {
                                  "type": "number",
                                  "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                  "required": true
                                },
                                "host_ip": {
                                  "type": "string",
                                  "description": "What host IP to bind the external port to.",
                                  "optional": true
                                },
                                "host_port": {
                                  "type": "number",
                                  "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                  "optional": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "readiness_probe": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "failure_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                  "optional": true
                                },
                                "initial_delay_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                },
                                "period_seconds": {
                                  "type": "number",
                                  "description": "How often (in seconds) to perform the probe",
                                  "optional": true
                                },
                                "success_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "optional": true
                                },
                                "timeout_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "exec": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "http_get": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path to access on the HTTP server.",
                                        "optional": true
                                      },
                                      "port": {
                                        "type": "string",
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "optional": true
                                      },
                                      "scheme": {
                                        "type": "string",
                                        "description": "Scheme to use for connecting to the host.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "http_header": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "The header field name",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The header field value",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "tcp_socket": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "port": {
                                        "type": "string",
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "resources": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "limits": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "cpu": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "memory": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "requests": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "cpu": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "memory": {
                                        "type": "string",
                                        "optional": true,
                                        "computed": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "security_context": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "allow_privilege_escalation": {
                                  "type": "bool",
                                  "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                  "optional": true
                                },
                                "privileged": {
                                  "type": "bool",
                                  "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                  "optional": true
                                },
                                "read_only_root_filesystem": {
                                  "type": "bool",
                                  "description": "Whether this container has a read-only root filesystem. Default is false.",
                                  "optional": true
                                },
                                "run_as_group": {
                                  "type": "number",
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                },
                                "run_as_non_root": {
                                  "type": "bool",
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                },
                                "run_as_user": {
                                  "type": "number",
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "capabilities": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "add": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Added capabilities",
                                        "optional": true
                                      },
                                      "drop": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Removed capabilities",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "se_linux_options": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "level": {
                                        "type": "string",
                                        "description": "Level is SELinux level label that applies to the container.",
                                        "optional": true
                                      },
                                      "role": {
                                        "type": "string",
                                        "description": "Role is a SELinux role label that applies to the container.",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type is a SELinux type label that applies to the container.",
                                        "optional": true
                                      },
                                      "user": {
                                        "type": "string",
                                        "description": "User is a SELinux user label that applies to the container.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "startup_probe": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "failure_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                  "optional": true
                                },
                                "initial_delay_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                },
                                "period_seconds": {
                                  "type": "number",
                                  "description": "How often (in seconds) to perform the probe",
                                  "optional": true
                                },
                                "success_threshold": {
                                  "type": "number",
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "optional": true
                                },
                                "timeout_seconds": {
                                  "type": "number",
                                  "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "exec": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "http_get": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path to access on the HTTP server.",
                                        "optional": true
                                      },
                                      "port": {
                                        "type": "string",
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "optional": true
                                      },
                                      "scheme": {
                                        "type": "string",
                                        "description": "Scheme to use for connecting to the host.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "http_header": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "The header field name",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "The header field value",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "tcp_socket": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "port": {
                                        "type": "string",
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "required": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "volume_mount": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "mount_path": {
                                  "type": "string",
                                  "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                  "required": true
                                },
                                "mount_propagation": {
                                  "type": "string",
                                  "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "This must match the Name of a Volume.",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                  "optional": true
                                },
                                "sub_path": {
                                  "type": "string",
                                  "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "security_context": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "fs_group": {
                            "type": "number",
                            "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                            "optional": true
                          },
                          "run_as_group": {
                            "type": "number",
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                            "optional": true
                          },
                          "run_as_non_root": {
                            "type": "bool",
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "optional": true
                          },
                          "run_as_user": {
                            "type": "number",
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                            "optional": true
                          },
                          "supplemental_groups": {
                            "type": [
                              "set",
                              "number"
                            ],
                            "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "se_linux_options": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "level": {
                                  "type": "string",
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "optional": true
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "optional": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "optional": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "toleration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "effect": {
                            "type": "string",
                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                            "optional": true
                          },
                          "key": {
                            "type": "string",
                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                            "optional": true
                          },
                          "operator": {
                            "type": "string",
                            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                            "optional": true
                          },
                          "toleration_seconds": {
                            "type": "string",
                            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                            "optional": true
                          }
                        }
                      }
                    },
                    "volume": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "aws_elastic_block_store": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                  "optional": true
                                },
                                "partition": {
                                  "type": "number",
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                  "optional": true
                                },
                                "volume_id": {
                                  "type": "string",
                                  "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "azure_disk": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "caching_mode": {
                                  "type": "string",
                                  "description": "Host Caching mode: None, Read Only, Read Write.",
                                  "required": true
                                },
                                "data_disk_uri": {
                                  "type": "string",
                                  "description": "The URI the data disk in the blob storage",
                                  "required": true
                                },
                                "disk_name": {
                                  "type": "string",
                                  "description": "The Name of the data disk in the blob storage",
                                  "required": true
                                },
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "azure_file": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                },
                                "secret_name": {
                                  "type": "string",
                                  "description": "The name of secret that contains Azure Storage Account Name and Key",
                                  "required": true
                                },
                                "share_name": {
                                  "type": "string",
                                  "description": "Share Name",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "ceph_fs": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "monitors": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "optional": true
                                },
                                "secret_file": {
                                  "type": "string",
                                  "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "optional": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "cinder": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "optional": true
                                },
                                "volume_id": {
                                  "type": "string",
                                  "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "config_map": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "default_mode": {
                                  "type": "string",
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "items": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "key": {
                                        "type": "string",
                                        "description": "The key to project.",
                                        "optional": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "downward_api": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "default_mode": {
                                  "type": "string",
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "items": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "mode": {
                                        "type": "string",
                                        "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                        "required": true
                                      }
                                    },
                                    "block_types": {
                                      "field_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "optional": true
                                            },
                                            "field_path": {
                                              "type": "string",
                                              "description": "Path of the field to select in the specified API version",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "min_items": 1,
                                        "max_items": 1
                                      },
                                      "resource_field_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_name": {
                                              "type": "string",
                                              "required": true
                                            },
                                            "quantity": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "resource": {
                                              "type": "string",
                                              "description": "Resource to select",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "empty_dir": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "medium": {
                                  "type": "string",
                                  "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "fc": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "lun": {
                                  "type": "number",
                                  "description": "FC target lun number",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                },
                                "target_ww_ns": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "FC target worldwide names (WWNs)",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "flex_volume": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "driver": {
                                  "type": "string",
                                  "description": "Driver is the name of the driver to use for this volume.",
                                  "required": true
                                },
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                  "optional": true
                                },
                                "options": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Extra command options if any.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "flocker": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "dataset_name": {
                                  "type": "string",
                                  "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                  "optional": true
                                },
                                "dataset_uuid": {
                                  "type": "string",
                                  "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "gce_persistent_disk": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "optional": true
                                },
                                "partition": {
                                  "type": "number",
                                  "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "optional": true
                                },
                                "pd_name": {
                                  "type": "string",
                                  "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "git_repo": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "directory": {
                                  "type": "string",
                                  "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                  "optional": true
                                },
                                "repository": {
                                  "type": "string",
                                  "description": "Repository URL",
                                  "optional": true
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "Commit hash for the specified revision.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "glusterfs": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "endpoints_name": {
                                  "type": "string",
                                  "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "host_path": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "path": {
                                  "type": "string",
                                  "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                  "optional": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "iscsi": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                  "optional": true
                                },
                                "iqn": {
                                  "type": "string",
                                  "description": "Target iSCSI Qualified Name.",
                                  "required": true
                                },
                                "iscsi_interface": {
                                  "type": "string",
                                  "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                  "optional": true
                                },
                                "lun": {
                                  "type": "number",
                                  "description": "iSCSI target lun number.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                  "optional": true
                                },
                                "target_portal": {
                                  "type": "string",
                                  "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "local": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "path": {
                                  "type": "string",
                                  "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "nfs": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "path": {
                                  "type": "string",
                                  "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                  "required": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                  "optional": true
                                },
                                "server": {
                                  "type": "string",
                                  "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "persistent_volume_claim": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "claim_name": {
                                  "type": "string",
                                  "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Will force the ReadOnly setting in VolumeMounts.",
                                  "optional": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "photon_persistent_disk": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "pd_id": {
                                  "type": "string",
                                  "description": "ID that identifies Photon Controller persistent disk",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "quobyte": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "group": {
                                  "type": "string",
                                  "description": "Group to map volume access to Default is no group",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                  "optional": true
                                },
                                "registry": {
                                  "type": "string",
                                  "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                  "required": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "User to map volume access to Defaults to serivceaccount user",
                                  "optional": true
                                },
                                "volume": {
                                  "type": "string",
                                  "description": "Volume is a string that references an already created Quobyte volume by name.",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "rbd": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "ceph_monitors": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "required": true
                                },
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                  "optional": true
                                },
                                "keyring": {
                                  "type": "string",
                                  "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "optional": true,
                                  "computed": true
                                },
                                "rados_user": {
                                  "type": "string",
                                  "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "optional": true
                                },
                                "rbd_image": {
                                  "type": "string",
                                  "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "required": true
                                },
                                "rbd_pool": {
                                  "type": "string",
                                  "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                  "optional": true
                                },
                                "read_only": {
                                  "type": "bool",
                                  "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "secret_ref": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "secret": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "default_mode": {
                                  "type": "string",
                                  "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                  "optional": true
                                },
                                "optional": {
                                  "type": "bool",
                                  "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                  "optional": true
                                },
                                "secret_name": {
                                  "type": "string",
                                  "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "items": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "key": {
                                        "type": "string",
                                        "description": "The key to project.",
                                        "optional": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "vsphere_volume": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_type": {
                                  "type": "string",
                                  "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "optional": true
                                },
                                "volume_path": {
                                  "type": "string",
                                  "description": "Path that identifies vSphere volume vmdk",
                                  "required": true
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_pod_disruption_budget": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the pod disruption budget that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the pod disruption budget. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the pod disruption budget, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the pod disruption budget must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this pod disruption budget that can be used by clients to determine when pod disruption budget has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this pod disruption budget.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this pod disruption budget. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "max_unavailable": {
                      "type": "string",
                      "optional": true
                    },
                    "min_available": {
                      "type": "string",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_priority_class": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "An arbitrary string that usually provides guidelines on when this priority class should be used.",
                "optional": true
              },
              "global_default": {
                "type": "bool",
                "description": "Specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "value": {
                "type": "number",
                "description": "The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.",
                "required": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the priority class that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the priority class. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the priority class, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this priority class that can be used by clients to determine when priority class has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this priority class.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this priority class. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_replication_controller": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the replication controller that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the replication controller. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the replication controller, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the replication controller must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this replication controller that can be used by clients to determine when replication controller has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this replication controller.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this replication controller. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "min_ready_seconds": {
                      "type": "number",
                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                      "optional": true
                    },
                    "replicas": {
                      "type": "number",
                      "description": "The number of desired replicas. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
                      "optional": true
                    },
                    "selector": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
                      "required": true
                    }
                  },
                  "block_types": {
                    "template": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "active_deadline_seconds": {
                            "type": "number",
                            "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                            "optional": true,
                            "computed": true
                          },
                          "automount_service_account_token": {
                            "type": "bool",
                            "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                            "optional": true
                          },
                          "dns_policy": {
                            "type": "string",
                            "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                            "optional": true,
                            "computed": true
                          },
                          "host_ipc": {
                            "type": "bool",
                            "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                            "optional": true,
                            "computed": true
                          },
                          "host_network": {
                            "type": "bool",
                            "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                            "optional": true,
                            "computed": true
                          },
                          "host_pid": {
                            "type": "bool",
                            "description": "Use the host's pid namespace.",
                            "optional": true,
                            "computed": true
                          },
                          "hostname": {
                            "type": "string",
                            "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                            "optional": true,
                            "computed": true
                          },
                          "node_name": {
                            "type": "string",
                            "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                            "optional": true,
                            "computed": true
                          },
                          "node_selector": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                            "optional": true,
                            "computed": true
                          },
                          "priority_class_name": {
                            "type": "string",
                            "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                            "optional": true,
                            "computed": true
                          },
                          "restart_policy": {
                            "type": "string",
                            "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                            "optional": true,
                            "computed": true
                          },
                          "service_account_name": {
                            "type": "string",
                            "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                            "optional": true,
                            "computed": true
                          },
                          "share_process_namespace": {
                            "type": "bool",
                            "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                            "optional": true
                          },
                          "subdomain": {
                            "type": "string",
                            "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                            "optional": true,
                            "computed": true
                          },
                          "termination_grace_period_seconds": {
                            "type": "number",
                            "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "block_types": {
                          "affinity": {
                            "nesting_mode": "list",
                            "block": {
                              "block_types": {
                                "node_affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "preferred_during_scheduling_ignored_during_execution": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "weight": {
                                              "type": "number",
                                              "description": "weight is in the range 1-100",
                                              "required": true
                                            }
                                          },
                                          "block_types": {
                                            "preference": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "match_expressions": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The label key that the selector applies to.",
                                                          "optional": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                          "optional": true
                                                        },
                                                        "values": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "min_items": 1,
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "required_during_scheduling_ignored_during_execution": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "node_selector_term": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "match_expressions": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The label key that the selector applies to.",
                                                          "optional": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                          "optional": true
                                                        },
                                                        "values": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "pod_affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "preferred_during_scheduling_ignored_during_execution": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "weight": {
                                              "type": "number",
                                              "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                              "required": true
                                            }
                                          },
                                          "block_types": {
                                            "pod_affinity_term": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "min_items": 1,
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "required_during_scheduling_ignored_during_execution": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "namespaces": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                              "optional": true
                                            },
                                            "topology_key": {
                                              "type": "string",
                                              "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "label_selector": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "match_labels": {
                                                    "type": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "match_expressions": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The label key that the selector applies to.",
                                                          "optional": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                          "optional": true
                                                        },
                                                        "values": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "pod_anti_affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "preferred_during_scheduling_ignored_during_execution": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "weight": {
                                              "type": "number",
                                              "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                              "required": true
                                            }
                                          },
                                          "block_types": {
                                            "pod_affinity_term": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "min_items": 1,
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "required_during_scheduling_ignored_during_execution": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "namespaces": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                              "optional": true
                                            },
                                            "topology_key": {
                                              "type": "string",
                                              "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "label_selector": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "match_labels": {
                                                    "type": [
                                                      "map",
                                                      "string"
                                                    ],
                                                    "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "match_expressions": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The label key that the selector applies to.",
                                                          "optional": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                          "optional": true
                                                        },
                                                        "values": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "container": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "args": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                  "optional": true
                                },
                                "command": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                  "optional": true
                                },
                                "image": {
                                  "type": "string",
                                  "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                  "optional": true
                                },
                                "image_pull_policy": {
                                  "type": "string",
                                  "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                  "optional": true,
                                  "computed": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                  "required": true
                                },
                                "stdin": {
                                  "type": "bool",
                                  "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                  "optional": true
                                },
                                "stdin_once": {
                                  "type": "bool",
                                  "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                  "optional": true
                                },
                                "termination_message_path": {
                                  "type": "string",
                                  "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                  "optional": true
                                },
                                "tty": {
                                  "type": "bool",
                                  "description": "Whether this container should allocate a TTY for itself",
                                  "optional": true
                                },
                                "working_dir": {
                                  "type": "string",
                                  "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "env": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "value_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "config_map_key_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to select.",
                                                    "optional": true
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "field_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "api_version": {
                                                    "type": "string",
                                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                    "optional": true
                                                  },
                                                  "field_path": {
                                                    "type": "string",
                                                    "description": "Path of the field to select in the specified API version",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "resource_field_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "container_name": {
                                                    "type": "string",
                                                    "optional": true
                                                  },
                                                  "resource": {
                                                    "type": "string",
                                                    "description": "Resource to select",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_key_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key of the secret to select from. Must be a valid secret key.",
                                                    "optional": true
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "env_from": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "prefix": {
                                        "type": "string",
                                        "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "config_map_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "required": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Specify whether the ConfigMap must be defined",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "required": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Specify whether the Secret must be defined",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "lifecycle": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "post_start": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "pre_stop": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "liveness_probe": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "failure_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                        "optional": true
                                      },
                                      "initial_delay_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      },
                                      "period_seconds": {
                                        "type": "number",
                                        "description": "How often (in seconds) to perform the probe",
                                        "optional": true
                                      },
                                      "success_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "optional": true
                                      },
                                      "timeout_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "port": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "container_port": {
                                        "type": "number",
                                        "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                        "required": true
                                      },
                                      "host_ip": {
                                        "type": "string",
                                        "description": "What host IP to bind the external port to.",
                                        "optional": true
                                      },
                                      "host_port": {
                                        "type": "number",
                                        "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                        "optional": true
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "readiness_probe": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "failure_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                        "optional": true
                                      },
                                      "initial_delay_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      },
                                      "period_seconds": {
                                        "type": "number",
                                        "description": "How often (in seconds) to perform the probe",
                                        "optional": true
                                      },
                                      "success_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "optional": true
                                      },
                                      "timeout_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "resources": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "limits": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "cpu": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "memory": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "requests": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "cpu": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "memory": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "allow_privilege_escalation": {
                                        "type": "bool",
                                        "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                        "optional": true
                                      },
                                      "privileged": {
                                        "type": "bool",
                                        "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                        "optional": true
                                      },
                                      "read_only_root_filesystem": {
                                        "type": "bool",
                                        "description": "Whether this container has a read-only root filesystem. Default is false.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "capabilities": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "add": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Added capabilities",
                                              "optional": true
                                            },
                                            "drop": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Removed capabilities",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "startup_probe": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "failure_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                        "optional": true
                                      },
                                      "initial_delay_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      },
                                      "period_seconds": {
                                        "type": "number",
                                        "description": "How often (in seconds) to perform the probe",
                                        "optional": true
                                      },
                                      "success_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "optional": true
                                      },
                                      "timeout_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "volume_mount": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "mount_path": {
                                        "type": "string",
                                        "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                        "required": true
                                      },
                                      "mount_propagation": {
                                        "type": "string",
                                        "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "This must match the Name of a Volume.",
                                        "required": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                        "optional": true
                                      },
                                      "sub_path": {
                                        "type": "string",
                                        "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "dns_config": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "nameservers": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                  "optional": true
                                },
                                "searches": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "option": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the option.",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value of the option. Optional: Defaults to empty.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "host_aliases": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "hostnames": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Hostnames for the IP address.",
                                  "required": true
                                },
                                "ip": {
                                  "type": "string",
                                  "description": "IP address of the host file entry.",
                                  "required": true
                                }
                              }
                            }
                          },
                          "image_pull_secrets": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "required": true
                                }
                              }
                            }
                          },
                          "init_container": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "args": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                  "optional": true
                                },
                                "command": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                  "optional": true
                                },
                                "image": {
                                  "type": "string",
                                  "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                  "optional": true
                                },
                                "image_pull_policy": {
                                  "type": "string",
                                  "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                  "optional": true,
                                  "computed": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                  "required": true
                                },
                                "stdin": {
                                  "type": "bool",
                                  "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                  "optional": true
                                },
                                "stdin_once": {
                                  "type": "bool",
                                  "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                  "optional": true
                                },
                                "termination_message_path": {
                                  "type": "string",
                                  "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                  "optional": true
                                },
                                "tty": {
                                  "type": "bool",
                                  "description": "Whether this container should allocate a TTY for itself",
                                  "optional": true
                                },
                                "working_dir": {
                                  "type": "string",
                                  "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "env": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                        "required": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "value_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "config_map_key_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to select.",
                                                    "optional": true
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "field_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "api_version": {
                                                    "type": "string",
                                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                    "optional": true
                                                  },
                                                  "field_path": {
                                                    "type": "string",
                                                    "description": "Path of the field to select in the specified API version",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "resource_field_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "container_name": {
                                                    "type": "string",
                                                    "optional": true
                                                  },
                                                  "resource": {
                                                    "type": "string",
                                                    "description": "Resource to select",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_key_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key of the secret to select from. Must be a valid secret key.",
                                                    "optional": true
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "env_from": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "prefix": {
                                        "type": "string",
                                        "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "config_map_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "required": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Specify whether the ConfigMap must be defined",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "required": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Specify whether the Secret must be defined",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                },
                                "lifecycle": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "post_start": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "pre_stop": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "liveness_probe": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "failure_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                        "optional": true
                                      },
                                      "initial_delay_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      },
                                      "period_seconds": {
                                        "type": "number",
                                        "description": "How often (in seconds) to perform the probe",
                                        "optional": true
                                      },
                                      "success_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "optional": true
                                      },
                                      "timeout_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "port": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "container_port": {
                                        "type": "number",
                                        "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                        "required": true
                                      },
                                      "host_ip": {
                                        "type": "string",
                                        "description": "What host IP to bind the external port to.",
                                        "optional": true
                                      },
                                      "host_port": {
                                        "type": "number",
                                        "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                        "optional": true
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "readiness_probe": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "failure_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                        "optional": true
                                      },
                                      "initial_delay_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      },
                                      "period_seconds": {
                                        "type": "number",
                                        "description": "How often (in seconds) to perform the probe",
                                        "optional": true
                                      },
                                      "success_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "optional": true
                                      },
                                      "timeout_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "resources": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "limits": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "cpu": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "memory": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "requests": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "cpu": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "memory": {
                                              "type": "string",
                                              "optional": true,
                                              "computed": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "allow_privilege_escalation": {
                                        "type": "bool",
                                        "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                        "optional": true
                                      },
                                      "privileged": {
                                        "type": "bool",
                                        "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                        "optional": true
                                      },
                                      "read_only_root_filesystem": {
                                        "type": "bool",
                                        "description": "Whether this container has a read-only root filesystem. Default is false.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "capabilities": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "add": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Added capabilities",
                                              "optional": true
                                            },
                                            "drop": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Removed capabilities",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "startup_probe": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "failure_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                        "optional": true
                                      },
                                      "initial_delay_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      },
                                      "period_seconds": {
                                        "type": "number",
                                        "description": "How often (in seconds) to perform the probe",
                                        "optional": true
                                      },
                                      "success_threshold": {
                                        "type": "number",
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "optional": true
                                      },
                                      "timeout_seconds": {
                                        "type": "number",
                                        "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "exec": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "command": {
                                              "type": [
                                                "list",
                                                "string"
                                              ],
                                              "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "http_get": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "host": {
                                              "type": "string",
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path to access on the HTTP server.",
                                              "optional": true
                                            },
                                            "port": {
                                              "type": "string",
                                              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "optional": true
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "description": "Scheme to use for connecting to the host.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "http_header": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The header field name",
                                                    "optional": true
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The header field value",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "tcp_socket": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "port": {
                                              "type": "string",
                                              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                              "required": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "volume_mount": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "mount_path": {
                                        "type": "string",
                                        "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                        "required": true
                                      },
                                      "mount_propagation": {
                                        "type": "string",
                                        "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "This must match the Name of a Volume.",
                                        "required": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                        "optional": true
                                      },
                                      "sub_path": {
                                        "type": "string",
                                        "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the replication controller's template that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the replication controller's template. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the replication controller's template, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace defines the space within which name of the replication controller's template must be unique.",
                                  "optional": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this replication controller's template that can be used by clients to determine when replication controller's template has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this replication controller's template.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this replication controller's template. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "security_context": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "fs_group": {
                                  "type": "number",
                                  "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                  "optional": true
                                },
                                "run_as_group": {
                                  "type": "number",
                                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "optional": true
                                },
                                "run_as_non_root": {
                                  "type": "bool",
                                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "optional": true
                                },
                                "run_as_user": {
                                  "type": "number",
                                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                  "optional": true
                                },
                                "supplemental_groups": {
                                  "type": [
                                    "set",
                                    "number"
                                  ],
                                  "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "se_linux_options": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "level": {
                                        "type": "string",
                                        "description": "Level is SELinux level label that applies to the container.",
                                        "optional": true
                                      },
                                      "role": {
                                        "type": "string",
                                        "description": "Role is a SELinux role label that applies to the container.",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type is a SELinux type label that applies to the container.",
                                        "optional": true
                                      },
                                      "user": {
                                        "type": "string",
                                        "description": "User is a SELinux user label that applies to the container.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "active_deadline_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                  "optional": true,
                                  "computed": true
                                },
                                "automount_service_account_token": {
                                  "type": "bool",
                                  "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                  "optional": true
                                },
                                "dns_policy": {
                                  "type": "string",
                                  "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                                  "optional": true,
                                  "computed": true
                                },
                                "host_ipc": {
                                  "type": "bool",
                                  "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                                  "optional": true,
                                  "computed": true
                                },
                                "host_network": {
                                  "type": "bool",
                                  "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                                  "optional": true,
                                  "computed": true
                                },
                                "host_pid": {
                                  "type": "bool",
                                  "description": "Use the host's pid namespace.",
                                  "optional": true,
                                  "computed": true
                                },
                                "hostname": {
                                  "type": "string",
                                  "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_name": {
                                  "type": "string",
                                  "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_selector": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                                  "optional": true,
                                  "computed": true
                                },
                                "priority_class_name": {
                                  "type": "string",
                                  "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                  "optional": true,
                                  "computed": true
                                },
                                "restart_policy": {
                                  "type": "string",
                                  "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                                  "optional": true,
                                  "computed": true
                                },
                                "service_account_name": {
                                  "type": "string",
                                  "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                                  "optional": true,
                                  "computed": true
                                },
                                "share_process_namespace": {
                                  "type": "bool",
                                  "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "subdomain": {
                                  "type": "string",
                                  "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                                  "optional": true,
                                  "computed": true
                                },
                                "termination_grace_period_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "block_types": {
                                "affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "node_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight is in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "preference": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "node_selector_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_anti_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "dns_config": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nameservers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                        "optional": true
                                      },
                                      "searches": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "option": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the option.",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of the option. Optional: Defaults to empty.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "host_aliases": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "hostnames": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Hostnames for the IP address.",
                                        "required": true
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP address of the host file entry.",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "image_pull_secrets": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "init_container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_group": {
                                        "type": "number",
                                        "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "supplemental_groups": {
                                        "type": [
                                          "set",
                                          "number"
                                        ],
                                        "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "toleration": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                        "optional": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                        "optional": true
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                        "optional": true
                                      },
                                      "toleration_seconds": {
                                        "type": "string",
                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "aws_elastic_block_store": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "caching_mode": {
                                              "type": "string",
                                              "description": "Host Caching mode: None, Read Only, Read Write.",
                                              "required": true
                                            },
                                            "data_disk_uri": {
                                              "type": "string",
                                              "description": "The URI the data disk in the blob storage",
                                              "required": true
                                            },
                                            "disk_name": {
                                              "type": "string",
                                              "description": "The Name of the data disk in the blob storage",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_file": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "The name of secret that contains Azure Storage Account Name and Key",
                                              "required": true
                                            },
                                            "share_name": {
                                              "type": "string",
                                              "description": "Share Name",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "ceph_fs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "secret_file": {
                                              "type": "string",
                                              "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "cinder": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "config_map": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "downward_api": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "required": true
                                                        },
                                                        "quantity": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "empty_dir": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "medium": {
                                              "type": "string",
                                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "fc": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "FC target lun number",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "target_ww_ns": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "FC target worldwide names (WWNs)",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flex_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "driver": {
                                              "type": "string",
                                              "description": "Driver is the name of the driver to use for this volume.",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                              "optional": true
                                            },
                                            "options": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "Extra command options if any.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flocker": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "dataset_name": {
                                              "type": "string",
                                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                              "optional": true
                                            },
                                            "dataset_uuid": {
                                              "type": "string",
                                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "gce_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "pd_name": {
                                              "type": "string",
                                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "git_repo": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "directory": {
                                              "type": "string",
                                              "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                              "optional": true
                                            },
                                            "repository": {
                                              "type": "string",
                                              "description": "Repository URL",
                                              "optional": true
                                            },
                                            "revision": {
                                              "type": "string",
                                              "description": "Commit hash for the specified revision.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "glusterfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "endpoints_name": {
                                              "type": "string",
                                              "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "host_path": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "iscsi": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                              "optional": true
                                            },
                                            "iqn": {
                                              "type": "string",
                                              "description": "Target iSCSI Qualified Name.",
                                              "required": true
                                            },
                                            "iscsi_interface": {
                                              "type": "string",
                                              "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "iSCSI target lun number.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                              "optional": true
                                            },
                                            "target_portal": {
                                              "type": "string",
                                              "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "local": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "nfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "optional": true
                                            },
                                            "server": {
                                              "type": "string",
                                              "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "persistent_volume_claim": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "claim_name": {
                                              "type": "string",
                                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Will force the ReadOnly setting in VolumeMounts.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "photon_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "pd_id": {
                                              "type": "string",
                                              "description": "ID that identifies Photon Controller persistent disk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "quobyte": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "group": {
                                              "type": "string",
                                              "description": "Group to map volume access to Default is no group",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                              "optional": true
                                            },
                                            "registry": {
                                              "type": "string",
                                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                              "required": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User to map volume access to Defaults to serivceaccount user",
                                              "optional": true
                                            },
                                            "volume": {
                                              "type": "string",
                                              "description": "Volume is a string that references an already created Quobyte volume by name.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "rbd": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "ceph_monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                              "optional": true
                                            },
                                            "keyring": {
                                              "type": "string",
                                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "rados_user": {
                                              "type": "string",
                                              "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "rbd_image": {
                                              "type": "string",
                                              "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "rbd_pool": {
                                              "type": "string",
                                              "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "vsphere_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "volume_path": {
                                              "type": "string",
                                              "description": "Path that identifies vSphere volume vmdk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          },
                          "toleration": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "effect": {
                                  "type": "string",
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "optional": true
                                },
                                "key": {
                                  "type": "string",
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                  "optional": true
                                },
                                "toleration_seconds": {
                                  "type": "string",
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                  "optional": true
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "volume": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "aws_elastic_block_store": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                        "optional": true
                                      },
                                      "partition": {
                                        "type": "number",
                                        "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                        "optional": true
                                      },
                                      "volume_id": {
                                        "type": "string",
                                        "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "azure_disk": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "caching_mode": {
                                        "type": "string",
                                        "description": "Host Caching mode: None, Read Only, Read Write.",
                                        "required": true
                                      },
                                      "data_disk_uri": {
                                        "type": "string",
                                        "description": "The URI the data disk in the blob storage",
                                        "required": true
                                      },
                                      "disk_name": {
                                        "type": "string",
                                        "description": "The Name of the data disk in the blob storage",
                                        "required": true
                                      },
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "azure_file": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                        "optional": true
                                      },
                                      "secret_name": {
                                        "type": "string",
                                        "description": "The name of secret that contains Azure Storage Account Name and Key",
                                        "required": true
                                      },
                                      "share_name": {
                                        "type": "string",
                                        "description": "Share Name",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "ceph_fs": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "monitors": {
                                        "type": [
                                          "set",
                                          "string"
                                        ],
                                        "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                        "required": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                        "optional": true
                                      },
                                      "secret_file": {
                                        "type": "string",
                                        "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                        "optional": true
                                      },
                                      "user": {
                                        "type": "string",
                                        "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "secret_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "cinder": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                        "optional": true
                                      },
                                      "volume_id": {
                                        "type": "string",
                                        "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "config_map": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "default_mode": {
                                        "type": "string",
                                        "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "items": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The key to project.",
                                              "optional": true
                                            },
                                            "mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "downward_api": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "default_mode": {
                                        "type": "string",
                                        "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "items": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                              "required": true
                                            }
                                          },
                                          "block_types": {
                                            "field_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "api_version": {
                                                    "type": "string",
                                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                    "optional": true
                                                  },
                                                  "field_path": {
                                                    "type": "string",
                                                    "description": "Path of the field to select in the specified API version",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "min_items": 1,
                                              "max_items": 1
                                            },
                                            "resource_field_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "container_name": {
                                                    "type": "string",
                                                    "required": true
                                                  },
                                                  "quantity": {
                                                    "type": "string",
                                                    "optional": true
                                                  },
                                                  "resource": {
                                                    "type": "string",
                                                    "description": "Resource to select",
                                                    "required": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "empty_dir": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "medium": {
                                        "type": "string",
                                        "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "fc": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                        "optional": true
                                      },
                                      "lun": {
                                        "type": "number",
                                        "description": "FC target lun number",
                                        "required": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                        "optional": true
                                      },
                                      "target_ww_ns": {
                                        "type": [
                                          "set",
                                          "string"
                                        ],
                                        "description": "FC target worldwide names (WWNs)",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "flex_volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "driver": {
                                        "type": "string",
                                        "description": "Driver is the name of the driver to use for this volume.",
                                        "required": true
                                      },
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                        "optional": true
                                      },
                                      "options": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "Extra command options if any.",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "secret_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "flocker": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "dataset_name": {
                                        "type": "string",
                                        "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                        "optional": true
                                      },
                                      "dataset_uuid": {
                                        "type": "string",
                                        "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "gce_persistent_disk": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                        "optional": true
                                      },
                                      "partition": {
                                        "type": "number",
                                        "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                        "optional": true
                                      },
                                      "pd_name": {
                                        "type": "string",
                                        "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                        "required": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "git_repo": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "directory": {
                                        "type": "string",
                                        "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                        "optional": true
                                      },
                                      "repository": {
                                        "type": "string",
                                        "description": "Repository URL",
                                        "optional": true
                                      },
                                      "revision": {
                                        "type": "string",
                                        "description": "Commit hash for the specified revision.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "glusterfs": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "endpoints_name": {
                                        "type": "string",
                                        "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                        "required": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                        "required": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "host_path": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "path": {
                                        "type": "string",
                                        "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                        "optional": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "iscsi": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                        "optional": true
                                      },
                                      "iqn": {
                                        "type": "string",
                                        "description": "Target iSCSI Qualified Name.",
                                        "required": true
                                      },
                                      "iscsi_interface": {
                                        "type": "string",
                                        "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                        "optional": true
                                      },
                                      "lun": {
                                        "type": "number",
                                        "description": "iSCSI target lun number.",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                        "optional": true
                                      },
                                      "target_portal": {
                                        "type": "string",
                                        "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "local": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "path": {
                                        "type": "string",
                                        "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "nfs": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "path": {
                                        "type": "string",
                                        "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                        "required": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                        "optional": true
                                      },
                                      "server": {
                                        "type": "string",
                                        "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "persistent_volume_claim": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "claim_name": {
                                        "type": "string",
                                        "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Will force the ReadOnly setting in VolumeMounts.",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "photon_persistent_disk": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                        "optional": true
                                      },
                                      "pd_id": {
                                        "type": "string",
                                        "description": "ID that identifies Photon Controller persistent disk",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "quobyte": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "group": {
                                        "type": "string",
                                        "description": "Group to map volume access to Default is no group",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                        "optional": true
                                      },
                                      "registry": {
                                        "type": "string",
                                        "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                        "required": true
                                      },
                                      "user": {
                                        "type": "string",
                                        "description": "User to map volume access to Defaults to serivceaccount user",
                                        "optional": true
                                      },
                                      "volume": {
                                        "type": "string",
                                        "description": "Volume is a string that references an already created Quobyte volume by name.",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "rbd": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "ceph_monitors": {
                                        "type": [
                                          "set",
                                          "string"
                                        ],
                                        "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                        "required": true
                                      },
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                        "optional": true
                                      },
                                      "keyring": {
                                        "type": "string",
                                        "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "rados_user": {
                                        "type": "string",
                                        "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                        "optional": true
                                      },
                                      "rbd_image": {
                                        "type": "string",
                                        "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                        "required": true
                                      },
                                      "rbd_pool": {
                                        "type": "string",
                                        "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                        "optional": true
                                      },
                                      "read_only": {
                                        "type": "bool",
                                        "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "secret_ref": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "secret": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "default_mode": {
                                        "type": "string",
                                        "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                        "optional": true
                                      },
                                      "optional": {
                                        "type": "bool",
                                        "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                        "optional": true
                                      },
                                      "secret_name": {
                                        "type": "string",
                                        "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "items": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The key to project.",
                                              "optional": true
                                            },
                                            "mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "vsphere_volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_type": {
                                        "type": "string",
                                        "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                        "optional": true
                                      },
                                      "volume_path": {
                                        "type": "string",
                                        "description": "Path that identifies vSphere volume vmdk",
                                        "required": true
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_resource_quota": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the resource quota that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the resource quota. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the resource quota, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the resource quota must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this resource quota that can be used by clients to determine when resource quota has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this resource quota.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this resource quota. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "hard": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "The set of desired hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota",
                      "optional": true
                    },
                    "scopes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
                      "optional": true
                    }
                  }
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_role": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the role that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the role. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the role, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the role must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this role that can be used by clients to determine when role has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this role.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this role. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_groups": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Name of the APIGroup that contains the resources",
                      "required": true
                    },
                    "resource_names": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "White list of names that the rule applies to",
                      "optional": true
                    },
                    "resources": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of resources that the rule applies to",
                      "required": true
                    },
                    "verbs": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule",
                      "required": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "kubernetes_role_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the roleBinding that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the roleBinding. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the roleBinding, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the roleBinding must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this roleBinding that can be used by clients to determine when roleBinding has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this roleBinding.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this roleBinding. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "role_ref": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_group": {
                      "type": "string",
                      "description": "The API group of the user. The only value possible at the moment is `rbac.authorization.k8s.io`.",
                      "required": true
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of resource.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the User to bind to.",
                      "required": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "subject": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api_group": {
                      "type": "string",
                      "description": "The API group of the subject resource.",
                      "optional": true,
                      "computed": true
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of resource.",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource to bind to.",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The Namespace of the subject resource.",
                      "optional": true
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        },
        "kubernetes_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of the secret data.",
                "optional": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of secret",
                "optional": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the secret, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the secret must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this secret that can be used by clients to determine when secret has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this secret.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this secret. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_service": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_ingress": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "hostname": "string",
                      "ip": "string"
                    }
                  ]
                ],
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the service must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this service.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cluster_ip": {
                      "type": "string",
                      "description": "The IP address of the service. It is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. `None` can be specified for headless services when proxying is not required. Ignored if type is `ExternalName`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
                      "optional": true,
                      "computed": true
                    },
                    "external_ips": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
                      "optional": true
                    },
                    "external_name": {
                      "type": "string",
                      "description": "The external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires `type` to be `ExternalName`.",
                      "optional": true
                    },
                    "external_traffic_policy": {
                      "type": "string",
                      "description": "Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. `Local` preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. `Cluster` obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading. More info: https://kubernetes.io/docs/tutorials/services/source-ip/",
                      "optional": true,
                      "computed": true
                    },
                    "load_balancer_ip": {
                      "type": "string",
                      "description": "Only applies to `type = LoadBalancer`. LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying this field when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
                      "optional": true
                    },
                    "load_balancer_source_ranges": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature. More info: http://kubernetes.io/docs/user-guide/services-firewalls",
                      "optional": true
                    },
                    "publish_not_ready_addresses": {
                      "type": "bool",
                      "description": "When set to true, indicates that DNS implementations must publish the `notReadyAddresses` of subsets for the Endpoints associated with the Service. The default value is `false`. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate `SRV` records for its Pods without respect to their readiness for purpose of peer discovery.",
                      "optional": true
                    },
                    "selector": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Route service traffic to pods with label keys and values matching this selector. Only applies to types `ClusterIP`, `NodePort`, and `LoadBalancer`. More info: http://kubernetes.io/docs/user-guide/services#overview",
                      "optional": true
                    },
                    "session_affinity": {
                      "type": "string",
                      "description": "Used to maintain session affinity. Supports `ClientIP` and `None`. Defaults to `None`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Determines how the service is exposed. Defaults to `ClusterIP`. Valid options are `ExternalName`, `ClusterIP`, `NodePort`, and `LoadBalancer`. `ExternalName` maps to the specified `external_name`. More info: http://kubernetes.io/docs/user-guide/services#overview",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "port": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "The name of this port within the service. All ports within the service must have unique names. Optional if only one ServicePort is defined on this service.",
                            "optional": true
                          },
                          "node_port": {
                            "type": "number",
                            "description": "The port on each node on which this service is exposed when `type` is `NodePort` or `LoadBalancer`. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the `type` of this service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "The port that will be exposed by this service.",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`.",
                            "optional": true
                          },
                          "target_port": {
                            "type": "string",
                            "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. This field is ignored for services with `cluster_ip = \"None\"`. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service",
                            "optional": true,
                            "computed": true
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "automount_service_account_token": {
                "type": "bool",
                "description": "True to enable automatic mounting of the service account token",
                "optional": true
              },
              "default_secret_name": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "image_pull_secret": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true
                    }
                  }
                }
              },
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the service account that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service account. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the service account, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the service account must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this service account that can be used by clients to determine when service account has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this service account.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this service account. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "secret": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true
                    }
                  }
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "kubernetes_stateful_set": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the stateful set that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the stateful set. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the stateful set, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the stateful set must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this stateful set that can be used by clients to determine when stateful set has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this stateful set.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this stateful set. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "pod_management_policy": {
                      "type": "string",
                      "description": "Controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down.",
                      "optional": true,
                      "computed": true
                    },
                    "replicas": {
                      "type": "number",
                      "description": "The desired number of replicas of the given Template, in the sense that they are instantiations of the same Template. Value must be a positive integer.",
                      "optional": true
                    },
                    "revision_history_limit": {
                      "type": "number",
                      "description": "The maximum number of revisions that will be maintained in the StatefulSet's revision history. The default value is 10.",
                      "optional": true,
                      "computed": true
                    },
                    "service_name": {
                      "type": "string",
                      "description": "The name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set.",
                      "required": true
                    }
                  },
                  "block_types": {
                    "selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the stateful set that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the stateful set. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the stateful set, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this stateful set that can be used by clients to determine when stateful set has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this stateful set.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this stateful set. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "active_deadline_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                  "optional": true
                                },
                                "automount_service_account_token": {
                                  "type": "bool",
                                  "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                  "optional": true
                                },
                                "dns_policy": {
                                  "type": "string",
                                  "description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                                  "optional": true
                                },
                                "host_ipc": {
                                  "type": "bool",
                                  "description": "Use the host's ipc namespace. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "host_network": {
                                  "type": "bool",
                                  "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                                  "optional": true
                                },
                                "host_pid": {
                                  "type": "bool",
                                  "description": "Use the host's pid namespace.",
                                  "optional": true
                                },
                                "hostname": {
                                  "type": "string",
                                  "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_name": {
                                  "type": "string",
                                  "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                  "optional": true,
                                  "computed": true
                                },
                                "node_selector": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                                  "optional": true
                                },
                                "priority_class_name": {
                                  "type": "string",
                                  "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                  "optional": true
                                },
                                "restart_policy": {
                                  "type": "string",
                                  "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                                  "optional": true
                                },
                                "service_account_name": {
                                  "type": "string",
                                  "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                                  "optional": true,
                                  "computed": true
                                },
                                "share_process_namespace": {
                                  "type": "bool",
                                  "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Defaults to false.",
                                  "optional": true
                                },
                                "subdomain": {
                                  "type": "string",
                                  "description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                                  "optional": true
                                },
                                "termination_grace_period_seconds": {
                                  "type": "number",
                                  "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "affinity": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "node_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight is in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "preference": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "node_selector_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "pod_anti_affinity": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "preferred_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "weight": {
                                                    "type": "number",
                                                    "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "pod_affinity_term": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "namespaces": {
                                                          "type": [
                                                            "set",
                                                            "string"
                                                          ],
                                                          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                          "optional": true
                                                        },
                                                        "topology_key": {
                                                          "type": "string",
                                                          "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "label_selector": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "match_labels": {
                                                                "type": [
                                                                  "map",
                                                                  "string"
                                                                ],
                                                                "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "optional": true
                                                              }
                                                            },
                                                            "block_types": {
                                                              "match_expressions": {
                                                                "nesting_mode": "list",
                                                                "block": {
                                                                  "attributes": {
                                                                    "key": {
                                                                      "type": "string",
                                                                      "description": "The label key that the selector applies to.",
                                                                      "optional": true
                                                                    },
                                                                    "operator": {
                                                                      "type": "string",
                                                                      "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                      "optional": true
                                                                    },
                                                                    "values": {
                                                                      "type": [
                                                                        "set",
                                                                        "string"
                                                                      ],
                                                                      "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "optional": true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            },
                                            "required_during_scheduling_ignored_during_execution": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "namespaces": {
                                                    "type": [
                                                      "set",
                                                      "string"
                                                    ],
                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'",
                                                    "optional": true
                                                  },
                                                  "topology_key": {
                                                    "type": "string",
                                                    "description": "empty topology key is interpreted by the scheduler as 'all topologies'",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "label_selector": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "match_labels": {
                                                          "type": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "match_expressions": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "key": {
                                                                "type": "string",
                                                                "description": "The label key that the selector applies to.",
                                                                "optional": true
                                                              },
                                                              "operator": {
                                                                "type": "string",
                                                                "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                                                "optional": true
                                                              },
                                                              "values": {
                                                                "type": [
                                                                  "set",
                                                                  "string"
                                                                ],
                                                                "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "dns_config": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "nameservers": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                        "optional": true
                                      },
                                      "searches": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "option": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the option.",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of the option. Optional: Defaults to empty.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "host_aliases": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "hostnames": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Hostnames for the IP address.",
                                        "required": true
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP address of the host file entry.",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "image_pull_secrets": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "required": true
                                      }
                                    }
                                  }
                                },
                                "init_container": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "args": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "command": {
                                        "type": [
                                          "list",
                                          "string"
                                        ],
                                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                        "optional": true
                                      },
                                      "image": {
                                        "type": "string",
                                        "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images",
                                        "optional": true
                                      },
                                      "image_pull_policy": {
                                        "type": "string",
                                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                        "required": true
                                      },
                                      "stdin": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                        "optional": true
                                      },
                                      "stdin_once": {
                                        "type": "bool",
                                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                        "optional": true
                                      },
                                      "termination_message_path": {
                                        "type": "string",
                                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                        "optional": true
                                      },
                                      "tty": {
                                        "type": "bool",
                                        "description": "Whether this container should allocate a TTY for itself",
                                        "optional": true
                                      },
                                      "working_dir": {
                                        "type": "string",
                                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "env": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the environment variable. Must be a C_IDENTIFIER",
                                              "required": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "value_from": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "config_map_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key to select.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "secret_key_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "key": {
                                                          "type": "string",
                                                          "description": "The key of the secret to select from. Must be a valid secret key.",
                                                          "optional": true
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "env_from": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "prefix": {
                                              "type": "string",
                                              "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "config_map_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the ConfigMap must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "required": true
                                                  },
                                                  "optional": {
                                                    "type": "bool",
                                                    "description": "Specify whether the Secret must be defined",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        }
                                      },
                                      "lifecycle": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "post_start": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "pre_stop": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "block_types": {
                                                  "exec": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "command": {
                                                          "type": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "http_get": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "host": {
                                                          "type": "string",
                                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                          "optional": true
                                                        },
                                                        "path": {
                                                          "type": "string",
                                                          "description": "Path to access on the HTTP server.",
                                                          "optional": true
                                                        },
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "optional": true
                                                        },
                                                        "scheme": {
                                                          "type": "string",
                                                          "description": "Scheme to use for connecting to the host.",
                                                          "optional": true
                                                        }
                                                      },
                                                      "block_types": {
                                                        "http_header": {
                                                          "nesting_mode": "list",
                                                          "block": {
                                                            "attributes": {
                                                              "name": {
                                                                "type": "string",
                                                                "description": "The header field name",
                                                                "optional": true
                                                              },
                                                              "value": {
                                                                "type": "string",
                                                                "description": "The header field value",
                                                                "optional": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  },
                                                  "tcp_socket": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "port": {
                                                          "type": "string",
                                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                          "required": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "liveness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "port": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "container_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                              "required": true
                                            },
                                            "host_ip": {
                                              "type": "string",
                                              "description": "What host IP to bind the external port to.",
                                              "optional": true
                                            },
                                            "host_port": {
                                              "type": "number",
                                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services",
                                              "optional": true
                                            },
                                            "protocol": {
                                              "type": "string",
                                              "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                              "optional": true
                                            }
                                          }
                                        }
                                      },
                                      "readiness_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "resources": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "block_types": {
                                            "limits": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "requests": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "cpu": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "memory": {
                                                    "type": "string",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "security_context": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "allow_privilege_escalation": {
                                              "type": "bool",
                                              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                              "optional": true
                                            },
                                            "privileged": {
                                              "type": "bool",
                                              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                              "optional": true
                                            },
                                            "read_only_root_filesystem": {
                                              "type": "bool",
                                              "description": "Whether this container has a read-only root filesystem. Default is false.",
                                              "optional": true
                                            },
                                            "run_as_group": {
                                              "type": "number",
                                              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_non_root": {
                                              "type": "bool",
                                              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            },
                                            "run_as_user": {
                                              "type": "number",
                                              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "capabilities": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "add": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Added capabilities",
                                                    "optional": true
                                                  },
                                                  "drop": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Removed capabilities",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "se_linux_options": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "level": {
                                                    "type": "string",
                                                    "description": "Level is SELinux level label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "role": {
                                                    "type": "string",
                                                    "description": "Role is a SELinux role label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Type is a SELinux type label that applies to the container.",
                                                    "optional": true
                                                  },
                                                  "user": {
                                                    "type": "string",
                                                    "description": "User is a SELinux user label that applies to the container.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "startup_probe": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "failure_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                              "optional": true
                                            },
                                            "initial_delay_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            },
                                            "period_seconds": {
                                              "type": "number",
                                              "description": "How often (in seconds) to perform the probe",
                                              "optional": true
                                            },
                                            "success_threshold": {
                                              "type": "number",
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "optional": true
                                            },
                                            "timeout_seconds": {
                                              "type": "number",
                                              "description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "exec": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "command": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "http_get": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "host": {
                                                    "type": "string",
                                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path to access on the HTTP server.",
                                                    "optional": true
                                                  },
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "optional": true
                                                  },
                                                  "scheme": {
                                                    "type": "string",
                                                    "description": "Scheme to use for connecting to the host.",
                                                    "optional": true
                                                  }
                                                },
                                                "block_types": {
                                                  "http_header": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "The header field name",
                                                          "optional": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The header field value",
                                                          "optional": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            },
                                            "tcp_socket": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "port": {
                                                    "type": "string",
                                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                    "required": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "volume_mount": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "mount_path": {
                                              "type": "string",
                                              "description": "Path within the container at which the volume should be mounted. Must not contain ':'.",
                                              "required": true
                                            },
                                            "mount_propagation": {
                                              "type": "string",
                                              "description": "Mount propagation mode. mount_propagation determines how mounts are propagated from the host to container and the other way around. Valid values are None (default), HostToContainer and Bidirectional.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "This must match the Name of a Volume.",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                              "optional": true
                                            },
                                            "sub_path": {
                                              "type": "string",
                                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "security_context": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "fs_group": {
                                        "type": "number",
                                        "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume.",
                                        "optional": true
                                      },
                                      "run_as_group": {
                                        "type": "number",
                                        "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "run_as_non_root": {
                                        "type": "bool",
                                        "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "optional": true
                                      },
                                      "run_as_user": {
                                        "type": "number",
                                        "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                        "optional": true
                                      },
                                      "supplemental_groups": {
                                        "type": [
                                          "set",
                                          "number"
                                        ],
                                        "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "se_linux_options": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "level": {
                                              "type": "string",
                                              "description": "Level is SELinux level label that applies to the container.",
                                              "optional": true
                                            },
                                            "role": {
                                              "type": "string",
                                              "description": "Role is a SELinux role label that applies to the container.",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type is a SELinux type label that applies to the container.",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is a SELinux user label that applies to the container.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  },
                                  "max_items": 1
                                },
                                "toleration": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                        "optional": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                        "optional": true
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                        "optional": true
                                      },
                                      "toleration_seconds": {
                                        "type": "string",
                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                        "optional": true
                                      }
                                    }
                                  }
                                },
                                "volume": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "aws_elastic_block_store": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "caching_mode": {
                                              "type": "string",
                                              "description": "Host Caching mode: None, Read Only, Read Write.",
                                              "required": true
                                            },
                                            "data_disk_uri": {
                                              "type": "string",
                                              "description": "The URI the data disk in the blob storage",
                                              "required": true
                                            },
                                            "disk_name": {
                                              "type": "string",
                                              "description": "The Name of the data disk in the blob storage",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "azure_file": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "The name of secret that contains Azure Storage Account Name and Key",
                                              "required": true
                                            },
                                            "share_name": {
                                              "type": "string",
                                              "description": "Share Name",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "ceph_fs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "Used as the mounted root, rather than the full Ceph tree, default is /",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "secret_file": {
                                              "type": "string",
                                              "description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "cinder": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "optional": true
                                            },
                                            "volume_id": {
                                              "type": "string",
                                              "description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "config_map": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "downward_api": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                    "required": true
                                                  }
                                                },
                                                "block_types": {
                                                  "field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "api_version": {
                                                          "type": "string",
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "optional": true
                                                        },
                                                        "field_path": {
                                                          "type": "string",
                                                          "description": "Path of the field to select in the specified API version",
                                                          "optional": true
                                                        }
                                                      }
                                                    },
                                                    "min_items": 1,
                                                    "max_items": 1
                                                  },
                                                  "resource_field_ref": {
                                                    "nesting_mode": "list",
                                                    "block": {
                                                      "attributes": {
                                                        "container_name": {
                                                          "type": "string",
                                                          "required": true
                                                        },
                                                        "quantity": {
                                                          "type": "string",
                                                          "optional": true
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "description": "Resource to select",
                                                          "required": true
                                                        }
                                                      }
                                                    },
                                                    "max_items": 1
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "empty_dir": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "medium": {
                                              "type": "string",
                                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "fc": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "FC target lun number",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            },
                                            "target_ww_ns": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "FC target worldwide names (WWNs)",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flex_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "driver": {
                                              "type": "string",
                                              "description": "Driver is the name of the driver to use for this volume.",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                              "optional": true
                                            },
                                            "options": {
                                              "type": [
                                                "map",
                                                "string"
                                              ],
                                              "description": "Extra command options if any.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write).",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "flocker": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "dataset_name": {
                                              "type": "string",
                                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                              "optional": true
                                            },
                                            "dataset_uuid": {
                                              "type": "string",
                                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "gce_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "partition": {
                                              "type": "number",
                                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            },
                                            "pd_name": {
                                              "type": "string",
                                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "git_repo": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "directory": {
                                              "type": "string",
                                              "description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                              "optional": true
                                            },
                                            "repository": {
                                              "type": "string",
                                              "description": "Repository URL",
                                              "optional": true
                                            },
                                            "revision": {
                                              "type": "string",
                                              "description": "Commit hash for the specified revision.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "glusterfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "endpoints_name": {
                                              "type": "string",
                                              "description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "path": {
                                              "type": "string",
                                              "description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "host_path": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                              "optional": true
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type for HostPath volume. Allowed values are \"\" (default), DirectoryOrCreate, Directory, FileOrCreate, File, Socket, CharDevice and BlockDevice",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "iscsi": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                                              "optional": true
                                            },
                                            "iqn": {
                                              "type": "string",
                                              "description": "Target iSCSI Qualified Name.",
                                              "required": true
                                            },
                                            "iscsi_interface": {
                                              "type": "string",
                                              "description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                              "optional": true
                                            },
                                            "lun": {
                                              "type": "number",
                                              "description": "iSCSI target lun number.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false.",
                                              "optional": true
                                            },
                                            "target_portal": {
                                              "type": "string",
                                              "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "local": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "nfs": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "path": {
                                              "type": "string",
                                              "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "optional": true
                                            },
                                            "server": {
                                              "type": "string",
                                              "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "persistent_volume_claim": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "claim_name": {
                                              "type": "string",
                                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same ",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Will force the ReadOnly setting in VolumeMounts.",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "photon_persistent_disk": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "pd_id": {
                                              "type": "string",
                                              "description": "ID that identifies Photon Controller persistent disk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "quobyte": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "group": {
                                              "type": "string",
                                              "description": "Group to map volume access to Default is no group",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                              "optional": true
                                            },
                                            "registry": {
                                              "type": "string",
                                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                              "required": true
                                            },
                                            "user": {
                                              "type": "string",
                                              "description": "User to map volume access to Defaults to serivceaccount user",
                                              "optional": true
                                            },
                                            "volume": {
                                              "type": "string",
                                              "description": "Volume is a string that references an already created Quobyte volume by name.",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "rbd": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "ceph_monitors": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                                              "optional": true
                                            },
                                            "keyring": {
                                              "type": "string",
                                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "rados_user": {
                                              "type": "string",
                                              "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            },
                                            "rbd_image": {
                                              "type": "string",
                                              "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "required": true
                                            },
                                            "rbd_pool": {
                                              "type": "string",
                                              "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                              "optional": true
                                            },
                                            "read_only": {
                                              "type": "bool",
                                              "description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "secret_ref": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                                    "optional": true
                                                  }
                                                }
                                              },
                                              "max_items": 1
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "secret": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "default_mode": {
                                              "type": "string",
                                              "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "optional": true
                                            },
                                            "optional": {
                                              "type": "bool",
                                              "description": "Optional: Specify whether the Secret or it's keys must be defined.",
                                              "optional": true
                                            },
                                            "secret_name": {
                                              "type": "string",
                                              "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                              "optional": true
                                            }
                                          },
                                          "block_types": {
                                            "items": {
                                              "nesting_mode": "list",
                                              "block": {
                                                "attributes": {
                                                  "key": {
                                                    "type": "string",
                                                    "description": "The key to project.",
                                                    "optional": true
                                                  },
                                                  "mode": {
                                                    "type": "string",
                                                    "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                    "optional": true
                                                  },
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                    "optional": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      },
                                      "vsphere_volume": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "fs_type": {
                                              "type": "string",
                                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                              "optional": true
                                            },
                                            "volume_path": {
                                              "type": "string",
                                              "description": "Path that identifies vSphere volume vmdk",
                                              "required": true
                                            }
                                          }
                                        },
                                        "max_items": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "update_strategy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "type": {
                            "type": "string",
                            "description": "Indicates the type of the StatefulSet update strategy. Default is RollingUpdate",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "rolling_update": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "partition": {
                                  "type": "number",
                                  "description": "Indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "volume_claim_template": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "metadata": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "An unstructured key value map stored with the persistent volume claim that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                                  "optional": true
                                },
                                "generate_name": {
                                  "type": "string",
                                  "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                  "optional": true
                                },
                                "generation": {
                                  "type": "number",
                                  "description": "A sequence number representing a specific generation of the desired state.",
                                  "computed": true
                                },
                                "labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume claim. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the persistent volume claim, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                  "optional": true,
                                  "computed": true
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace defines the space within which name of the persistent volume claim must be unique.",
                                  "optional": true
                                },
                                "resource_version": {
                                  "type": "string",
                                  "description": "An opaque value that represents the internal version of this persistent volume claim that can be used by clients to determine when persistent volume claim has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                  "computed": true
                                },
                                "self_link": {
                                  "type": "string",
                                  "description": "A URL representing this persistent volume claim.",
                                  "computed": true
                                },
                                "uid": {
                                  "type": "string",
                                  "description": "The unique in time and space value for this persistent volume claim. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                                  "computed": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          },
                          "spec": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "access_modes": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1",
                                  "required": true
                                },
                                "storage_class_name": {
                                  "type": "string",
                                  "description": "Name of the storage class requested by the claim",
                                  "optional": true,
                                  "computed": true
                                },
                                "volume_name": {
                                  "type": "string",
                                  "description": "The binding reference to the PersistentVolume backing this claim.",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "block_types": {
                                "resources": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "limits": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                        "optional": true
                                      },
                                      "requests": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                        "optional": true
                                      }
                                    }
                                  },
                                  "min_items": 1,
                                  "max_items": 1
                                },
                                "selector": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "attributes": {
                                      "match_labels": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "optional": true
                                      }
                                    },
                                    "block_types": {
                                      "match_expressions": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "key": {
                                              "type": "string",
                                              "description": "The label key that the selector applies to.",
                                              "optional": true
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                              "optional": true
                                            },
                                            "values": {
                                              "type": [
                                                "set",
                                                "string"
                                              ],
                                              "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "optional": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "max_items": 1
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      }
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_storage_class": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_volume_expansion": {
                "type": "bool",
                "description": "Indicates whether the storage class allow volume expand",
                "optional": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "mount_options": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Persistent Volumes that are dynamically created by a storage class will have the mount options specified",
                "optional": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The parameters for the provisioner that should create volumes of this storage class",
                "optional": true
              },
              "reclaim_policy": {
                "type": "string",
                "description": "Indicates the type of the reclaim policy",
                "optional": true
              },
              "storage_provisioner": {
                "type": "string",
                "description": "Indicates the type of the provisioner",
                "required": true
              },
              "volume_binding_mode": {
                "type": "string",
                "description": "Indicates when volume binding and dynamic provisioning should occur",
                "optional": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the storage class that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the storage class. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the storage class, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this storage class that can be used by clients to determine when storage class has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this storage class.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this storage class. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_validating_webhook_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the validating webhook configuration that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generate_name": {
                      "type": "string",
                      "description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the validating webhook configuration. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the validating webhook configuration, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this validating webhook configuration that can be used by clients to determine when validating webhook configuration has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this validating webhook configuration.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this validating webhook configuration. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              },
              "webhook": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "admission_review_versions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
                      "optional": true
                    },
                    "failure_policy": {
                      "type": "string",
                      "description": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.",
                      "optional": true
                    },
                    "match_policy": {
                      "type": "string",
                      "description": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
                      "required": true
                    },
                    "side_effects": {
                      "type": "string",
                      "description": "SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
                      "optional": true
                    },
                    "timeout_seconds": {
                      "type": "number",
                      "description": "TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "client_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ca_bundle": {
                            "type": "string",
                            "description": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
                            "optional": true
                          },
                          "url": {
                            "type": "string",
                            "description": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "service": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "`name` is the name of the service. Required",
                                  "required": true
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "`namespace` is the namespace of the service. Required",
                                  "required": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "`path` is an optional URL path which will be sent in any request to this service.",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
                                  "optional": true
                                }
                              }
                            },
                            "min_items": 1,
                            "max_items": 1
                          }
                        }
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "namespace_selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "object_selector": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "match_labels": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "match_expressions": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The label key that the selector applies to.",
                                  "optional": true
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.",
                                  "optional": true
                                },
                                "values": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "max_items": 1
                    },
                    "rule": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "api_groups": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          },
                          "api_versions": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          },
                          "operations": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.",
                            "required": true
                          },
                          "resources": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "required": true
                          },
                          "scope": {
                            "type": "string",
                            "optional": true
                          }
                        }
                      },
                      "min_items": 1
                    }
                  }
                },
                "min_items": 1
              }
            }
          }
        }
      },
      "data_source_schemas": {
        "kubernetes_all_namespaces": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "namespaces": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of all namespaces in a cluster.",
                "computed": true
              }
            }
          }
        },
        "kubernetes_config_map": {
          "version": 0,
          "block": {
            "attributes": {
              "binary_data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of the config map binary data.",
                "computed": true
              },
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of the config map data.",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the config_map that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the config_map. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the config_map, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the config_map must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this config_map that can be used by clients to determine when config_map has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this config_map.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this config_map. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_ingress": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_ingress": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "hostname": "string",
                      "ip": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "spec": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "backend": [
                        "list",
                        [
                          "object",
                          {
                            "service_name": "string",
                            "service_port": "string"
                          }
                        ]
                      ],
                      "rule": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "http": [
                              "list",
                              [
                                "object",
                                {
                                  "path": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "backend": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "service_name": "string",
                                              "service_port": "string"
                                            }
                                          ]
                                        ],
                                        "path": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "secret_name": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the ingress that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the ingress. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the ingress, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the ingress must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this ingress that can be used by clients to determine when ingress has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this ingress.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this ingress. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "spec": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "finalizers": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Spec defines the behavior of the Namespace.",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the namespace that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the namespace. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the namespace, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this namespace that can be used by clients to determine when namespace has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this namespace.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this namespace. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of the secret data.",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of secret",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the secret, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the secret must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this secret that can be used by clients to determine when secret has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this secret.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this secret. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_service": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "load_balancer_ingress": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "hostname": "string",
                      "ip": "string"
                    }
                  ]
                ],
                "computed": true
              },
              "spec": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cluster_ip": "string",
                      "external_ips": [
                        "set",
                        "string"
                      ],
                      "external_name": "string",
                      "external_traffic_policy": "string",
                      "load_balancer_ip": "string",
                      "load_balancer_source_ranges": [
                        "set",
                        "string"
                      ],
                      "port": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "node_port": "number",
                            "port": "number",
                            "protocol": "string",
                            "target_port": "string"
                          }
                        ]
                      ],
                      "publish_not_ready_addresses": "bool",
                      "selector": [
                        "map",
                        "string"
                      ],
                      "session_affinity": "string",
                      "type": "string"
                    }
                  ]
                ],
                "description": "Spec defines the behavior of a service. https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the service must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this service.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_service_account": {
          "version": 0,
          "block": {
            "attributes": {
              "automount_service_account_token": {
                "type": "bool",
                "description": "True to enable automatic mounting of the service account token",
                "computed": true
              },
              "default_secret_name": {
                "type": "string",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "image_pull_secret": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "name": "string"
                    }
                  ]
                ],
                "description": "A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret",
                "computed": true
              },
              "secret": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "name": "string"
                    }
                  ]
                ],
                "description": "A list of secrets allowed to be used by pods running using this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the service account that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service account. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the service account, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which name of the service account must be unique.",
                      "optional": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this service account that can be used by clients to determine when service account has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this service account.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this service account. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        },
        "kubernetes_storage_class": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_volume_expansion": {
                "type": "bool",
                "description": "Indicates whether the storage class allow volume expand",
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "mount_options": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Persistent Volumes that are dynamically created by a storage class will have the mount options specified",
                "computed": true
              },
              "parameters": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The parameters for the provisioner that should create volumes of this storage class",
                "computed": true
              },
              "reclaim_policy": {
                "type": "string",
                "description": "Indicates the type of the reclaim policy",
                "computed": true
              },
              "storage_provisioner": {
                "type": "string",
                "description": "Indicates the type of the provisioner",
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the storage class that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the storage class. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the storage class, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this storage class that can be used by clients to determine when storage class has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "computed": true
                    },
                    "self_link": {
                      "type": "string",
                      "description": "A URL representing this storage class.",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this storage class. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "computed": true
                    }
                  }
                },
                "min_items": 1,
                "max_items": 1
              }
            }
          }
        }
      }
    },
    "null": {
      "provider": {
        "version": 0,
        "block": {}
      },
      "resource_schemas": {
        "null_resource": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "triggers": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              }
            }
          }
        }
      },
      "data_source_schemas": {
        "null_data_source": {
          "version": 0,
          "block": {
            "attributes": {
              "has_computed_default": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "optional": true,
                "computed": true
              },
              "inputs": {
                "type": [
                  "map",
                  "string"
                ],
                "optional": true
              },
              "outputs": {
                "type": [
                  "map",
                  "string"
                ],
                "computed": true
              },
              "random": {
                "type": "string",
                "computed": true
              }
            }
          }
        }
      }
    }
  }
}
